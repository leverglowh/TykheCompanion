{"version":3,"sources":["utils/general-utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CARD_INPUT_REGEX","cardSort","card1","card2","name","tier","App","useState","invData","setInvData","editCat","setEditCat","editUid","setEditUid","inputCardValue","setInputCardValue","useEffect","loadedInv","localStorage","getItem","JSON","parse","document","onkeyup","e","key","getElementById","style","setProperty","setItem","stringify","dataCheck","uid","uidString","length","includes","handleInputChange","target","value","handleInputKeyUp","click","addNewCard","persist","cat","dataset","handleNewCardSubmit","inputString","replace","trim","preventDefault","test","Number","temp_vals","split","map","word","filter","w","slice","join","card","find","c","alert","sort","removeProperty","Object","keys","forEach","removeCard","tagName","parentElement","editCard","old","firstElementChild","innerHTML","className","title","data-cat","onClick","id","type","autoFocus","onChange","onKeyUp","placeholder","i","data-uid","htmlFor","accept","event","file","files","console","log","reader","FileReader","readAsText","onload","evt","removed_locks","result","built_inv","last_cat","line","startsWith","input","push","current_cat","sortedInv","k","window","location","reload","onerror","href","encodeURIComponent","download","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7086292.chunk.js","sourcesContent":["import { ICard } from 'model/card.model';\n\nexport const CARD_INPUT_REGEX = /(^:[1-5]star128:\\W*-\\W*(.+)\\W*-\\W*[0-9]{4}$)|(^[1-5](s|star)?[\\s-]{1}(.+)[\\s-]{1}[0-9]{4}$)/g;\n\nexport const cardSort = (card1:ICard, card2:ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier > card2.tier) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1\n    }\n  }\n};","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cardSort, CARD_INPUT_REGEX } from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\n\nconst App = () => {\n  const [invData, setInvData] = useState<any>(null);\n  const [editCat, setEditCat] = useState(\"\");\n  const [editUid, setEditUid] = useState(0);\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    if (loadedInv) {\n      setInvData(JSON.parse(loadedInv));\n    }\n  }, []);\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        setEditCat(\"\");\n        setInputCardValue(\"\");\n        document\n          .getElementById(editUid + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        setEditUid(0);\n      }\n    };\n  }, [editUid]);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n  }, [invData]);\n\n  const dataCheck = (tier: number, name: string, uid: number) => {\n    const uidString = uid + \"\";\n    return !(\n      !tier ||\n      !name ||\n      !uid ||\n      tier > 5 ||\n      tier < 1 ||\n      name.length <= 0 ||\n      uidString.includes(\".\") ||\n      uidString.includes(\",\") ||\n      uidString.length !== 4 ||\n      uid < 1000\n    );\n  };\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const handleInputKeyUp = (e: any) => {\n    if (e.key === \"Enter\") {\n      document.getElementById(\"new-card-input-submit-button\")?.click();\n    }\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    setEditCat(cat);\n    setInputCardValue(\"\");\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\")\n      .replace(\":lock:\", \"\")\n      .trim();\n\n    if (inputString === \"JSON\") {\n      // secret command\n      document.getElementById(\"downloadJSON\")?.click();\n      setEditCat(\"\");\n      setEditUid(0);\n      setInputCardValue(\"\");\n      e.preventDefault();\n      return;\n    }\n\n    // Sanity check\n    if (!CARD_INPUT_REGEX.test(inputString)) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    let tier = 0;\n    let uid = 0;\n    let name = \"\";\n    if (inputString?.[0] === \":\") {\n      // copied from inv\n      tier = Number(inputString[1]);\n      const temp_vals = [\n        ...inputString.split(\"-\").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0); // remove empty words\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n    } else {\n      let temp_vals = [];\n\n      temp_vals = [\n        ...inputString.split(\"-\").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0);\n\n      tier = Number(inputString[0]);\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n\n      if (!dataCheck(tier, name, uid)) {\n        // retry with space as split string\n        temp_vals = [\n          ...inputString.split(\" \").map((word: string) => word.trim()),\n        ].filter(w => w.length > 0);\n\n        tier = Number(inputString[0]);\n        uid = Number(temp_vals[temp_vals.length - 1]);\n        name = temp_vals.slice(1, temp_vals.length - 1).join(\" \");\n      }\n    }\n\n    // sanity check\n    if (!dataCheck(tier, name, uid)) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    if (editUid) {\n      // edit existing\n      const card = (invData[editCat] as ICard[]).find(c => c.uid === editUid);\n      // if (!card) BOH\n      if (name !== card?.name) {\n        alert(\n          \"Attention: you input a different card name, the old card will be replaced.\"\n        );\n      }\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat].filter((c: ICard) => c.uid !== editUid),\n          {\n            tier,\n            name,\n            uid,\n          },\n        ].sort(cardSort),\n      });\n\n      document\n        .getElementById(editUid + \"\")\n        ?.style.removeProperty(\"text-decoration\");\n    } else {\n      Object.keys(invData).forEach(cat => {\n        const isDuplicate = !!(invData[cat] as ICard[]).find(\n          c => c.uid === uid\n        );\n        if (isDuplicate) {\n          alert(\"Duplicate UID, please check your data.\");\n          // eslint-disable-next-line no-throw-literal\n          throw \"Duplicate UID, please check your data.\";\n        }\n      });\n\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat],\n          {\n            tier,\n            name,\n            uid,\n          },\n        ].sort(cardSort),\n      });\n    }\n\n    setEditCat(\"\");\n    setEditUid(0);\n    setInputCardValue(\"\");\n    e.preventDefault();\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    setInvData({\n      ...invData,\n      [cat]: [...invData[cat].filter((c: ICard) => c.uid !== uid)],\n    });\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    setEditCat(cat);\n    setEditUid(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        // console.log(evt.target.result);\n        const removed_locks = (evt?.target?.result as string)?.replace(\n          \":lock:\",\n          \"\"\n        );\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = removed_locks.split(\"\\n\");\n        lines.forEach(line => {\n          if (line.startsWith(\":\")) {\n            // is inv item line\n            const tier = Number(line[1]);\n\n            const temp_vals = [...line.split(\"-\").map(word => word.trim())];\n            const uid = Number(temp_vals[temp_vals.length - 1]);\n            const name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n            if (!last_cat || !dataCheck(tier, name, uid)) {\n              alert('Non valid input, abort! abort!');\n              const input = document.getElementById(\"initial-inv-input\") as HTMLInputElement;\n              if (input) {\n                input.value = \"\";\n              }\n              // eslint-disable-next-line no-throw-literal\n              throw \"error, bye\";\n            } else {\n              built_inv[last_cat].push({\n                tier,\n                name,\n                uid,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)].sort();\n        keys.forEach(k => {\n          sortedInv[k] = built_inv[k].sort(cardSort);\n        });\n\n        localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n        window.location.reload();\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n  return (\n    <div className='container'>\n      {!invData ? (\n        <div className='file-input-container'>\n          <label htmlFor='initial-inv-input'>\n            Hi, please upload inventory text file.\n          </label>\n          <br />\n          <input\n            type='file'\n            name='initial-inv-input'\n            id='initial-inv-input'\n            accept='text/plain'\n            onChange={handleInvInput}\n          />\n        </div>\n      ) : (\n        Object.keys(invData).map(cat => {\n          return (\n            <div key={cat} className='cat'>\n              <div className='cat-header'>\n                <b>{cat}</b>\n                <span\n                  className='abs-right-button'\n                  title='Add a new card'\n                  data-cat={cat}\n                  onClick={addNewCard}\n                >\n                  +\n                </span>\n              </div>\n              <div className='cat-body'>\n                {editCat === cat && (\n                  <div id='new-card-form'>\n                    <div className='card-format'>\n                      ?\n                      <span className='card-format-info'>\n                        Copy from inv:\n                        <br />\n                        <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                        <br />\n                        or manually insert\n                        <br />\n                        <b>2s Hawkeye (Kate Bishop) 2333</b>\n                      </span>\n                    </div>\n                    <input\n                      id='new-card-input-box'\n                      className='new-card-input-box'\n                      type='text'\n                      autoFocus\n                      value={inputCardValue}\n                      onChange={handleInputChange}\n                      onKeyUp={handleInputKeyUp}\n                      placeholder='2s Hawkeye (Kate Bishop) 2333'\n                    />\n                    <input\n                      type='button'\n                      id='new-card-input-submit-button'\n                      value='✓'\n                      onClick={handleNewCardSubmit}\n                    />\n                  </div>\n                )}\n                <div className='hide-overflow'>\n                  {(invData[cat] as ICard[]).map((card, i) => (\n                    <Fragment key={card.uid}>\n                      {invData[cat]?.[i - 1]?.name !== card.name && <hr />}\n                      <div\n                        className={\"card star\" + card.tier}\n                        id={card.uid + \"\"}\n                      >\n                        <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                        <span\n                          className='edit-card-button unselectable'\n                          data-cat={cat}\n                          data-uid={card.uid}\n                          onClick={editCard}\n                        >\n                          <b>&#9998;</b>\n                        </span>\n                        <span\n                          className='delete-card-button unselectable'\n                          data-cat={cat}\n                          data-uid={card.uid}\n                          onClick={removeCard}\n                        >\n                          <b>&times;</b>\n                        </span>\n                      </div>\n                    </Fragment>\n                  ))}\n                </div>\n              </div>\n            </div>\n          );\n        })\n      )}\n      <a\n        id='downloadJSON'\n        href={\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(invData))\n        }\n        download='inv.json'\n        style={{ display: \"none\" }}\n      >\n        DOWNLOAD JSON\n      </a>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}