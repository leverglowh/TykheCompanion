{"version":3,"sources":["utils/constants.ts","utils/general-utils.ts","components/sub-category-card.tsx","components/mergeables-modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Filter","Sort","CARD_INPUT_REGEX","sortCardByNameAscTierDiscUIDAsc","card1","card2","name","tier","uid","handleSort","sort","TierFirst","sortCardByTierDiscNameAscUIDAsc","NameFirst","parseCard","line","console","log","test","Number","temp_vals","split","map","word","trim","filter","w","length","slice","indexOf","match","dataCheck","join","uidString","includes","fireSubmitOnEnter","e","elementId","key","document","getElementById","click","SubCategoryCard","props","category","invData","editingUID","editingCategory","updateInvData","updateCreatingNewCat","updateEditingUID","updateRemoveInfo","updateEditingCategory","useState","inputCardValue","setInputCardValue","useEffect","onkeyup","style","setProperty","editCard","persist","target","tagName","cat","dataset","old","firstElementChild","innerHTML","parentElement","removeCard","toBeRemoved","find","c","className","title","data-cat","onClick","id","type","autoFocus","value","onChange","onKeyUp","placeholder","inputString","replace","preventDefault","localStorage","clear","window","location","reload","parsedCard","card","alert","removeProperty","Object","keys","some","i","isSpare","meargeable","data-uid","MergeablesModal","filteredMergeables","setFilteredMergeables","temp","tempCat","cardsInCat","forEach","prevCard","oldList","handleMerge","pair","uids","newList","newCard","nextMergeable","unshift","checkbox","checked","Modal","show","onHide","closeModal","Header","closeButton","Body","fontWeight","textDecoration","cardName","Form","Check","Input","data-tier","data-name","data-pair","Label","Footer","Button","variant","App","setInvData","setEditingCategory","setEditingUID","removeInfo","setRemoveInfo","errorLog","setErrorLog","showResult","setShowResult","isCreatingNewCat","setCreatingNewCat","showMergeablesModal","setShowMergeablesModal","None","setFilter","setSort","remoteSync","useCallback","data","binId","getItem","req","XMLHttpRequest","onreadystatechange","readyState","DONE","setItem","Date","valueOf","JSON","parse","response","metadata","open","setRequestHeader","send","stringify","fetchDataFromJsonBin","inv","record","every","Array","isArray","localData","loadedInv","lastFetch","isFetchedIn1Min","hasLocal","hasRemote","loadedData","newInv","isCreating","info","toggleMergeablesModal","totalCount","tierCounts","tier1","tier2","tier3","tier4","tier5","handleSortChange","sortCriteria","Navbar","bg","fixed","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","data-sort","active","disabled","newFilter","Divider","accept","event","file","files","reader","FileReader","readAsText","onload","evt","response_text","result","built_inv","last_cat","lines","textLine","invalidCounter","tempLog","startsWith","push","current_cat","sortedInv","k","onerror","Control","href","encodeURIComponent","download","display","backdrop","keyboard","Alert","copy","l","keptCard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.70ca7805.chunk.js","sourcesContent":["export enum Filter {\n  None = \"None\",\n  Tier5 = \"Tier5\",\n  Tier4 = \"Tier4\",\n  Tier3 = \"Tier3\",\n  Tier2 = \"Tier2\",\n  Tier1 = \"Tier1\",\n};\n\nexport enum Sort {\n  NameFirst = \"sortCardByNameAscTierDiscUIDAsc\",\n  TierFirst = \"sortCardByTierDiscNameAscUIDAsc\",\n};\n","import { ICard } from \"model/card.model\";\nimport { Sort } from './constants';\n\nexport const CARD_INPUT_REGEX = /(^:[1-5](star128|_star):\\W*-\\W*(.+)\\W*-\\W*[0-9]{4}$)|(^[1-5](s|star)?[\\s-]{1}(.+)[\\s-]{1}[0-9]{4}$)/;\n\nexport const sortCardByNameAscTierDiscUIDAsc = (card1: ICard, card2: ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier < card2.tier) {\n      return 1;\n    } else {\n      return card1.uid - card2.uid;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n};\n\nexport const sortCardByTierDiscNameAscUIDAsc = (card1: ICard, card2: ICard) => {\n  if (card1.tier === card2.tier) {\n    if (card1.name < card2.name) {\n      return -1;\n    } else if (card1.name > card2.name) {\n      return 1;\n    } else {\n      return card1.uid - card2.uid;\n    }\n  } else {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\nexport const handleSort = (sort: Sort) => (card1: ICard, card2: ICard) => {\n  switch (sort) {\n    case Sort.TierFirst:\n      return sortCardByTierDiscNameAscUIDAsc(card1, card2);\n    case Sort.NameFirst:\n      return sortCardByNameAscTierDiscUIDAsc(card1, card2);\n    default:\n      return sortCardByNameAscTierDiscUIDAsc(card1, card2);\n  }\n};\n\nexport const parseCard = (line: string) => {\n  console.log(line);\n  let tier = 0;\n  let uid = 0;\n  let name = \"\";\n  if (line?.[0] === \":\") {\n    // copied from inv\n    if (!/^:[0-5](star128|_star):/.test(line)) return null;\n\n    tier = Number(line[1]);\n    const temp_vals = [\n      ...line.split(\"-\").map((word: string) => word.trim()),\n    ].filter(w => w.length > 0); // remove empty words\n    uid = Number(temp_vals[temp_vals.length - 1]);\n    name = line\n      .slice(line.indexOf(temp_vals[1]), line.indexOf(uid + \"\") - 1)\n      .trim();\n    if (name[name.length - 1] === '-') {\n      name = name.slice(0, name.length-2).trim();\n    }\n  } else {\n    if (!/^[1-5][^0-9]+/.test(line)) return null;\n    let temp_vals = [];\n\n    temp_vals = [...line.split(\"-\").map((word: string) => word.trim())].filter(\n      w => w.length > 0\n    );\n\n    const numberPattern = /\\d+/g;\n\n    tier = Number(temp_vals[0].match(numberPattern)?.[0]) || 0;\n    uid = Number(temp_vals[temp_vals.length - 1]);\n    name = line\n      .slice(line.indexOf(temp_vals[1]), line.indexOf(uid + \"\") - 1)\n      .trim();\n    if (name[name.length - 1] === '-') {\n      name = name.slice(0, name.length-2).trim();\n    }\n\n    if (!dataCheck(tier, name, uid)) {\n      // retry with space as split string\n      temp_vals = [\n        ...line.split(\" \").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0);\n\n      tier = Number(line[0]);\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" \");\n    }\n  }\n\n  // sanity check\n  if (!dataCheck(tier, name, uid)) {\n    return null;\n  }\n\n  return { tier, name, uid };\n};\n\nexport const dataCheck = (tier: number, name: string, uid: number) => {\n  const uidString = uid + \"\";\n  return !(\n    !tier ||\n    !name ||\n    !uid ||\n    tier > 5 ||\n    tier < 1 ||\n    name.length <= 0 ||\n    uidString.includes(\".\") ||\n    uidString.includes(\",\") ||\n    uidString.length !== 4 ||\n    uid < 1000\n  );\n};\n\nexport const fireSubmitOnEnter = (e: any, elementId: string) => {\n  if (e.key === \"Enter\") {\n    document.getElementById(elementId)?.click();\n  }\n};\n","import { ICard } from \"model/card.model\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Filter, Sort } from \"utils/constants\";\nimport {\n  sortCardByNameAscTierDiscUIDAsc,\n  CARD_INPUT_REGEX,\n  fireSubmitOnEnter,\n  parseCard,\n  handleSort,\n} from \"utils/general-utils\";\n\nexport interface ISubCategoryCardProps {\n  category: string;\n  invData: any;\n  filter: Filter;\n  editingCategory: string;\n  editingUID: number;\n  sort: Sort;\n  updateInvData: (newInv: any) => void;\n  updateEditingUID: (uid: number) => void;\n  updateRemoveInfo: (info: any) => void;\n  updateEditingCategory: (cat: string) => void;\n  updateCreatingNewCat: (isCreating: boolean) => void;\n}\n\nconst SubCategoryCard: React.FC<ISubCategoryCardProps> = props => {\n  const {\n    category,\n    invData,\n    sort,\n    editingUID,\n    editingCategory,\n    updateInvData,\n    updateCreatingNewCat,\n    updateEditingUID,\n    updateRemoveInfo,\n    updateEditingCategory,\n  } = props;\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        updateEditingCategory(\"\");\n        setInputCardValue(\"\");\n        document\n          .getElementById(editingUID + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        updateEditingUID(0);\n      }\n    };\n  }, [editingUID, updateEditingUID, updateEditingCategory]);\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    updateEditingCategory(cat);\n    setInputCardValue(\"\");\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    updateEditingCategory(cat);\n    updateEditingUID(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n    const toBeRemoved = invData[cat].find((c: any) => c.uid === uid);\n    updateRemoveInfo({ cat, ...toBeRemoved });\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\")\n      .replace(\":lock:\", \"\")\n      .trim();\n\n    if (inputString === \"JSON\") {\n      // secret command\n      document.getElementById(\"downloadJSON\")?.click();\n      updateEditingCategory(\"\");\n      updateEditingUID(0);\n      setInputCardValue(\"\");\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"CLEAR\") {\n      // secret command\n      localStorage.clear();\n      window.location.reload();\n      return;\n    }\n\n    if (inputString === \"CREATE CAT\") {\n      // secret command\n      updateCreatingNewCat(true);\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"DELETE CAT\") {\n      // secret command\n      updateRemoveInfo({ cat: editingCategory, tier: 0, name: \"\", uid: 0 });\n      e.preventDefault();\n      return;\n    }\n\n    // Sanity check\n    if (!CARD_INPUT_REGEX.test(inputString)) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    const parsedCard = parseCard(inputString);\n\n    if (!parsedCard) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    if (editingUID) {\n      // edit existing\n      const card = (invData[editingCategory] as ICard[]).find(\n        c => c.uid === editingUID\n      );\n      // if (!card) BOH\n      if (parsedCard?.name !== card?.name) {\n        alert(\n          \"Attention: you input a different card name, the old card will be replaced.\"\n        );\n      }\n      updateInvData({\n        ...invData,\n        [editingCategory]: [\n          ...invData[editingCategory].filter(\n            (c: ICard) => c.uid !== editingUID\n          ),\n          { ...parsedCard },\n        ].sort(sortCardByNameAscTierDiscUIDAsc),\n      });\n\n      document\n        .getElementById(editingUID + \"\")\n        ?.style.removeProperty(\"text-decoration\");\n    } else {\n      const isDuplicate = Object.keys(invData).some(cat =>\n        (invData[cat] as ICard[]).some(card => card.uid === parsedCard?.uid)\n      );\n      if (isDuplicate) {\n        alert(\"Duplicate UID, please check your data.\");\n        return;\n      }\n\n      updateInvData({\n        ...invData,\n        [editingCategory]: [\n          ...invData[editingCategory],\n          { ...parsedCard },\n        ].sort(handleSort(sort)),\n      });\n    }\n\n    updateEditingUID(0);\n    setInputCardValue(\"\");\n    updateEditingCategory(\"\");\n    e.preventDefault();\n  };\n\n  return (\n    <div className='cat'>\n      <div className='cat-header'>\n        <b title={invData[category].length}>{category}</b>\n        <span\n          className='abs-right-button'\n          title='Add a new card'\n          data-cat={category}\n          onClick={addNewCard}\n        >\n          +\n        </span>\n      </div>\n      <div className='cat-body'>\n        {editingCategory === category && (\n          <div id='new-card-form'>\n            <div className='card-format'>\n              ?\n              <span className='card-format-info'>\n                Copy from inv:\n                <br />\n                <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                <br />\n                or manually insert\n                <br />\n                <b>2s Hawkeye (Kate Bishop) 2333</b>\n              </span>\n            </div>\n            <input\n              id='new-card-input-box'\n              className='new-card-input-box'\n              type='text'\n              autoFocus\n              value={inputCardValue}\n              onChange={handleInputChange}\n              onKeyUp={e =>\n                fireSubmitOnEnter(e, \"new-card-input-submit-button\")\n              }\n              placeholder='2s Hawkeye (Kate Bishop) 2333'\n            />\n            <input\n              type='button'\n              id='new-card-input-submit-button'\n              value='✓'\n              onClick={handleNewCardSubmit}\n            />\n          </div>\n        )}\n        <div className='hide-overflow'>\n          {(invData[category] as ICard[]).sort(handleSort(sort)).map((card, i) => {\n            const isSpare = invData[category]?.[i - 1]?.name === card.name;\n            const meargeable =\n              (invData[category]?.[i - 1]?.tier === card.tier &&\n                invData[category]?.[i - 1]?.name === card.name) ||\n              (invData[category]?.[i + 1]?.name === card.name &&\n                invData[category]?.[i + 1]?.tier === card.tier);\n            return (\n              <Fragment key={card.uid}>\n                {!isSpare && <hr />}\n                <div\n                  className={`card-line star${card.tier} ${\n                    meargeable ? \"mergeable\" : \"non-mergeable\"\n                  }`}\n                  id={card.uid + \"\"}\n                >\n                  <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                  <span\n                    className='edit-card-button unselectable'\n                    data-cat={category}\n                    data-uid={card.uid}\n                    onClick={editCard}\n                  >\n                    <b>&#9998;</b>\n                  </span>\n                  <span\n                    className='delete-card-button unselectable'\n                    data-cat={category}\n                    data-uid={card.uid}\n                    onClick={removeCard}\n                  >\n                    <b>&times;</b>\n                  </span>\n                </div>\n              </Fragment>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubCategoryCard;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { ICard } from \"model/card.model\";\nimport { sortCardByNameAscTierDiscUIDAsc } from 'utils/general-utils';\n\nexport interface IMergeablesModalProps {\n  invData: any;\n  handleMerge: (cat: string, uids: number[]) => void;\n  closeModal: () => void;\n}\n\nconst MergeablesModal: React.FC<IMergeablesModalProps> = props => {\n  const [filteredMergeables, setFilteredMergeables] = useState<{\n    [key: string]: { [key: string]: ICard[] };\n  }>({});\n  useEffect(() => {\n    const temp: { [key: string]: { [key: string]: ICard[] } } = {};\n    for (const cat in props.invData) {\n      const tempCat: { [key: string]: ICard[] } = {};\n      const cardsInCat = props.invData[cat];\n      cardsInCat.forEach((card: ICard, i: number) => {\n        if (i === 0) return; // skip first one\n        const prevCard: ICard = cardsInCat[i - 1];\n        if (card.name === prevCard.name && card.tier === prevCard.tier) {\n          const oldList =\n            tempCat[card.name]?.filter(c => c.uid !== prevCard.uid) || [];\n          // Me and prev are dupe\n          tempCat[card.name] = [...oldList, prevCard, card];\n        }\n      });\n      if (Object.keys(tempCat).length > 0) temp[cat] = tempCat;\n    }\n    setFilteredMergeables(temp);\n  }, [props.invData]);\n\n  const handleMerge = (e: any) => {\n    e.persist();\n    const { cat, name, pair, tier } = e.target.dataset;\n    const uids = pair.split('-').map((uid: string) => Number(uid));\n    // remove these 2 cards, add one card with uid = uids[0]\n    props.handleMerge(cat, uids);\n\n    let newList = filteredMergeables[cat][name].filter(c => !uids.includes(c.uid));\n    if (newList.length < 2) newList = [];\n\n    const newCard: ICard = { tier: Number(tier) + 1, name, uid: uids[0] };\n    const nextMergeable = props.invData[cat].find((card: ICard) => card.name === name && card.tier === Number(tier) + 1);\n    if (nextMergeable) {\n      newList.unshift(...[nextMergeable, newCard].sort(sortCardByNameAscTierDiscUIDAsc));\n    }\n\n    const temp = {...filteredMergeables};\n    if (!newList.length) {\n      delete temp[cat][name];\n      if (Object.keys(temp[cat]).length === 0) delete temp[cat];\n    } else {\n      temp[cat][name] = newList;\n    }\n    const checkbox:any = document.getElementById(`merge-${name}`);\n    if (checkbox) checkbox.checked = false;\n\n    setFilteredMergeables(temp);\n  };\n\n  return (\n    <Modal show onHide={props.closeModal} className='mergeables-modal'>\n      <Modal.Header closeButton>Mergeable cards</Modal.Header>\n      <Modal.Body>\n        <div>\n          {Object.keys(filteredMergeables).length === 0 && (\n            <div>\n              No mergeable cards, well done!\n            </div>\n          )}\n          {Object.keys(filteredMergeables).map((cat, i) => (\n            <Fragment key={\"mergeable-\" + cat}>\n              {i !== 0 && <hr />}\n              <div>\n                <div\n                  style={{ fontWeight: \"bold\", textDecoration: \"underline\" }}\n                >\n                  {cat}\n                </div>\n                {Object.keys(filteredMergeables[cat]).map(cardName => (\n                  <div key={`mergeable-${cat}-${cardName}`}>\n                    <div>\n                      <Form.Check type=\"checkbox\">\n                        <Form.Check.Input type=\"checkbox\" id={`merge-${cardName}`} onChange={handleMerge} data-cat={cat} data-tier={filteredMergeables[cat][cardName][0].tier} data-name={cardName} data-pair={`${filteredMergeables[cat][cardName][0].uid}-${filteredMergeables[cat][cardName][1].uid}`}/>\n                        <Form.Check.Label><i>\n                        !m m, {filteredMergeables[cat][cardName][0].uid},{\" \"}\n                        {filteredMergeables[cat][cardName][1].uid}\n                      </i></Form.Check.Label>\n                      </Form.Check>\n                      \n                    </div>\n                    <div>\n                      {filteredMergeables[cat][cardName].map(card => (\n                        <div\n                          className={`card-line star${card.tier}`}\n                          id={\"mergeable-\" + card.uid}\n                          key={`mergeable-${card.uid}`}\n                        >\n                          <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Fragment>\n          ))}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant='primary'\n          id='new-subcat-input-button'\n          onClick={props.closeModal}\n        >\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default MergeablesModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  dataCheck,\n  fireSubmitOnEnter,\n  parseCard,\n  handleSort,\n} from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\nimport { Filter, Sort } from \"utils/constants\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport SubCategoryCard from \"components/sub-category-card\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport MergeablesModal from \"components/mergeables-modal\";\n\nexport interface IInv {\n  [cat: string]: ICard[];\n}\n\nconst App = () => {\n  const [invData, setInvData] = useState<IInv>();\n  const [editingCategory, setEditingCategory] = useState(\"\");\n  const [editingUID, setEditingUID] = useState(0);\n\n  const [removeInfo, setRemoveInfo] = useState<{\n    cat: string;\n    tier: number;\n    name: string;\n    uid: number;\n  } | null>(null);\n  const [errorLog, setErrorLog] = useState<string[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [isCreatingNewCat, setCreatingNewCat] = useState(false);\n  const [showMergeablesModal, setShowMergeablesModal] = useState(false);\n\n  const [filter, setFilter] = useState<Filter>(Filter.None);\n  const [sort, setSort] = useState<Sort>(Sort.NameFirst);\n\n  const remoteSync = useCallback((data?: any) => {\n    const binId = localStorage.getItem(\"binId\");\n    if (!binId) {\n      // create a new bin\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          const binId = JSON.parse(req.response).metadata.id;\n          if (!binId) return;\n\n          localStorage.setItem(\"binId\", binId);\n          localStorage.setItem(\"last-fetch\", new Date().valueOf() + \"\");\n          alert(\n            \"Save this id so you can restore your inv in future: \" +\n              JSON.parse(req.response).metadata.id\n          );\n        }\n      };\n\n      req.open(\"POST\", \"https://api.jsonbin.io/v3/b\", true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\"X-BIN-PRIVATE\", \"false\");\n      req.setRequestHeader(\"X-Bin-Versioning\", \"false\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem(\"inv\"));\n    } else {\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          localStorage.setItem(\"last-fetch\", new Date().valueOf() + \"\");\n          console.log(\n            JSON.parse(req.response).metadata ? \"Sync success\" : \"Sync error\"\n          );\n        }\n      };\n\n      req.open(\"PUT\", \"https://api.jsonbin.io/v3/b/\" + binId, true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem(\"inv\"));\n    }\n  }, []);\n\n  const fetchDataFromJsonBin = useCallback((binId: string) => {\n    let req = new XMLHttpRequest();\n\n    req.onreadystatechange = () => {\n      if (req.readyState === XMLHttpRequest.DONE) {\n        const inv = JSON.parse(req.response).record;\n        if (typeof inv !== \"object\") {\n          alert(\n            \"Invalid data, please check your backup id or upload an inv file.\"\n          );\n          (document.getElementById(\n            \"backup-id-input\"\n          ) as HTMLInputElement).value = \"\";\n          localStorage.clear();\n          return;\n        }\n        const cats = Object.keys(inv);\n        const isValid = cats.every(\n          cat =>\n            Array.isArray(inv[cat]) &&\n            inv[cat].every((card: any) =>\n              dataCheck(card.tier, card.name, card.uid)\n            )\n        );\n        if (isValid) {\n          const localData = localStorage.getItem(\"inv\");\n          if (!localData) {\n            // no local, only remote\n            localStorage.setItem(\"inv\", JSON.stringify(inv));\n          } else if (JSON.stringify(inv) !== localData) {\n            // remote !== local\n            alert(\"Discrepancy remote vs local, keeping remote for now.\");\n            localStorage.setItem(\"inv\", JSON.stringify(inv));\n          }\n          localStorage.setItem(\"last-fetch\", new Date().valueOf() + \"\");\n          localStorage.setItem(\"binId\", binId);\n          window.location.reload();\n        } else {\n          alert(\n            \"Invalid data, please check your backup id or upload an inv file.\"\n          );\n          (document.getElementById(\n            \"backup-id-input\"\n          ) as HTMLInputElement).value = \"\";\n          localStorage.clear();\n          return;\n        }\n      }\n    };\n\n    req.open(\"GET\", `https://api.jsonbin.io/v3/b/${binId}/latest`, true);\n    req.send();\n  }, []);\n\n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    const binId = localStorage.getItem(\"binId\");\n    const lastFetch = Number(localStorage.getItem(\"last-fetch\")) || 0;\n    const isFetchedIn1Min = new Date().valueOf() - lastFetch < 1 * 60 * 1000;\n    const hasLocal = loadedInv !== null;\n    const hasRemote = binId !== null;\n\n    if (hasRemote && isFetchedIn1Min && hasLocal) {\n      setInvData(JSON.parse(loadedInv as string));\n    } else if (hasLocal && !hasRemote) {\n      const loadedData = JSON.parse(loadedInv as string);\n      setInvData(loadedData);\n      remoteSync(loadedData);\n    } else if (hasRemote) {\n      fetchDataFromJsonBin(binId as string);\n    }\n  }, [remoteSync, fetchDataFromJsonBin]);\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        document\n          .getElementById(editingUID + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        setEditingUID(0);\n      }\n    };\n  }, [editingUID]);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n    const binId = localStorage.getItem(\"binId\");\n    binId && remoteSync(invData);\n  }, [invData, remoteSync]);\n\n  const updateInvData = (newInv: any) => {\n    if (newInv) {\n      setInvData(newInv);\n    }\n  };\n\n  const updateEditingCategory = (cat: string) => {\n    setEditingCategory(cat);\n  };\n  const updateEditingUID = (uid: number) => {\n    setEditingUID(uid);\n  };\n  const updateCreatingNewCat = (isCreating: boolean) => {\n    setCreatingNewCat(isCreating);\n  };\n  const updateRemoveInfo = (info: any) => {\n    setRemoveInfo(info);\n  };\n\n  const handleBackupIdInput = (e: any) => {\n    const id: string = (document.getElementById(\n      \"backup-id-input\"\n    ) as HTMLInputElement)?.value;\n\n    if (!id) {\n      alert(\n        \"Invalid input, please check your backup id or upload an inv file.\"\n      );\n      return;\n    }\n    fetchDataFromJsonBin(id);\n  };\n\n  const confirmRemove = () => {\n    if (!removeInfo?.cat) return;\n    if (!removeInfo.tier && removeInfo.cat) {\n      // removing whole cat\n      const copy = { ...invData };\n      delete copy[removeInfo.cat];\n      setInvData(copy);\n      setRemoveInfo(null);\n      return;\n    }\n    if (!removeInfo.uid) return;\n    setInvData({\n      ...invData,\n      [removeInfo.cat]: [\n        ...(invData?.[removeInfo.cat]?.filter(\n          (c: ICard) => c.uid !== removeInfo.uid\n        ) || []),\n      ],\n    });\n    setRemoveInfo(null);\n  };\n\n  const abortRemove = () => {\n    setRemoveInfo(null);\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        const response_text = evt?.target?.result as string;\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = response_text\n          .split(\"\\n\")\n          .map(textLine => textLine.replace(\" :lock:\", \"\"));\n        let invalidCounter = 0;\n        const tempLog: string[] = [];\n        lines.forEach(line => {\n          if (line.startsWith(\":\") || /^[0-9]/.test(line)) {\n            // starts with : or number -> is inv item line\n            const parsedCard = parseCard(line.trim());\n\n            if (!last_cat || !parsedCard) {\n              invalidCounter++;\n              tempLog.push(line);\n              return;\n            } else {\n              built_inv[last_cat].push({\n                ...parsedCard,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)];\n\n        if (keys.length === 0) {\n          // Empty obj\n          invalidCounter++;\n          tempLog.push(\"No lines found.\");\n        } else {\n          keys.forEach(k => {\n            if (built_inv[k].length === 0) {\n              delete built_inv[k];\n              tempLog.push(k);\n              return;\n            }\n            sortedInv[k] = built_inv[k].sort(handleSort(sort));\n          });\n\n          localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n        }\n\n        if (invalidCounter > 0) {\n          setErrorLog(tempLog);\n          setShowResult(true);\n        } else {\n          window.location.reload();\n        }\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n\n  const closeImportResultModal = () => {\n    window.location.reload();\n  };\n\n  const addSub = () => {\n    const cat = (document.getElementById(\n      \"new-subcat-input\"\n    ) as HTMLInputElement).value;\n    if (!cat) {\n      alert(\"Invalid category name\");\n      return;\n    } else {\n      setInvData({\n        ...invData,\n        [cat]: [],\n      });\n      setCreatingNewCat(false);\n      setEditingCategory(\"\");\n      setEditingUID(0);\n    }\n  };\n\n  const handleFilterChange = (e: any) => {\n    e.persist();\n    const newFilter = e.target.dataset.filter;\n    if (newFilter === filter) return;\n    switch (newFilter) {\n      default:\n        setFilter(Filter.None);\n        break;\n    }\n  };\n\n  const toggleMergeablesModal = () => {\n    setShowMergeablesModal(!showMergeablesModal);\n  };\n\n  const handleMerge = (cat: string, uids: number[]) => {\n    const keptCard = invData?.[cat]?.find(c => c.uid === uids[0]);\n    if (!keptCard) return;\n    const newList = [\n      ...(invData?.[cat]?.filter(c => !uids.includes(c.uid)) || []),\n      { ...keptCard, tier: keptCard.tier + 1 },\n    ].sort(handleSort(sort));\n    setInvData({\n      ...invData,\n      [cat]: newList,\n    });\n  };\n\n  let totalCount = 0;\n  const tierCounts = { tier1: 0, tier2: 0, tier3: 0, tier4: 0, tier5: 0 };\n  for (const cat in invData) {\n    totalCount = totalCount + invData[cat].length;\n    for (let i = 0; i < invData[cat].length; i++) {\n      switch (invData[cat][i].tier) {\n        case 1:\n          tierCounts.tier1++;\n          break;\n        case 2:\n          tierCounts.tier2++;\n          break;\n        case 3:\n          tierCounts.tier3++;\n          break;\n        case 4:\n          tierCounts.tier4++;\n          break;\n        case 5:\n          tierCounts.tier5++;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  const handleSortChange = (e: any) => {\n    e.persist();\n    const sortCriteria = e.target?.dataset?.sort;\n    if (sortCriteria === sort) return;\n    setSort(sortCriteria);\n  };\n\n  return (\n    <>\n      {invData && (\n        <Navbar\n          bg='dark'\n          variant='dark'\n          fixed='top'\n          collapseOnSelect\n          id='header'\n        >\n          <Navbar.Brand>\n            TC&nbsp;<span className='cards-count'>{totalCount}</span>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='mr-auto'>\n              <NavDropdown title='Sort' id='sort-dropdown'>\n                <NavDropdown.Item\n                  data-sort={Sort.NameFirst}\n                  active={sort === Sort.NameFirst}\n                  onClick={handleSortChange}\n                >\n                  by Name\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  data-sort={Sort.TierFirst}\n                  active={sort === Sort.TierFirst}\n                  onClick={handleSortChange}\n                >\n                  by Star\n                </NavDropdown.Item>\n                <NavDropdown.Item disabled>by UID (WIP)</NavDropdown.Item>\n              </NavDropdown>\n              <NavDropdown title='Filter' id='filter-dropdown'>\n                <NavDropdown.Item\n                  active={filter === Filter.None}\n                  onClick={handleFilterChange}\n                >\n                  No Filter\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item disabled>\n                  5 star ({tierCounts.tier5}) (WIP)\n                </NavDropdown.Item>\n                <NavDropdown.Item disabled>\n                  4 star ({tierCounts.tier4}) (WIP)\n                </NavDropdown.Item>\n                <NavDropdown.Item disabled>\n                  3 star ({tierCounts.tier3}) (WIP)\n                </NavDropdown.Item>\n                <NavDropdown.Item disabled>\n                  2 star ({tierCounts.tier2}) (WIP)\n                </NavDropdown.Item>\n                <NavDropdown.Item disabled>\n                  1 star ({tierCounts.tier1}) (WIP)\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Button variant='outline-warning' onClick={toggleMergeablesModal}>\n              Show mergeables\n            </Button>\n            {/* <Form inline>\n              <FormControl\n                type='text'\n                placeholder='Search'\n                className='mr-sm-2'\n              />\n              <Button variant='outline-warning'>Search</Button>\n            </Form> */}\n          </Navbar.Collapse>\n        </Navbar>\n      )}\n      <div className='main-container'>\n        {!invData ? (\n          <div className='file-input-container'>\n            <div>\n              <div className='text-align-left'>\n                Hi, please upload inventory text file.\n              </div>\n              <br />\n              <input\n                type='file'\n                name='initial-inv-input'\n                id='initial-inv-input'\n                accept='text/plain'\n                onChange={handleInvInput}\n              />\n            </div>\n            <div>\n              <div className='text-align-left'>Or input the backup id:</div>\n              <div className='backup-id-input-container'>\n                <Form.Control\n                  placeholder='607b400f0ed6f819beae5284'\n                  id='backup-id-input'\n                  onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) =>\n                    fireSubmitOnEnter(e, \"backup-id-input-button\")\n                  }\n                />\n                &nbsp;\n                <Button\n                  id='backup-id-input-button'\n                  onClick={handleBackupIdInput}\n                >\n                  Enter\n                </Button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          Object.keys(invData)\n            .sort()\n            .map(cat => {\n              return (\n                <SubCategoryCard\n                  key={cat}\n                  category={cat}\n                  filter={filter}\n                  invData={invData}\n                  sort={sort}\n                  editingCategory={editingCategory}\n                  editingUID={editingUID}\n                  updateInvData={updateInvData}\n                  updateRemoveInfo={updateRemoveInfo}\n                  updateEditingUID={updateEditingUID}\n                  updateCreatingNewCat={updateCreatingNewCat}\n                  updateEditingCategory={updateEditingCategory}\n                />\n              );\n            })\n        )}\n        <a\n          id='downloadJSON'\n          href={\n            \"data:text/json;charset=utf-8,\" +\n            encodeURIComponent(JSON.stringify(invData))\n          }\n          download='inv.json'\n          style={{ display: \"none\" }}\n        >\n          DOWNLOAD JSON\n        </a>\n        {removeInfo && (\n          <Modal show backdrop='static' keyboard={false}>\n            <Modal.Header>Are you sure?</Modal.Header>\n            <Modal.Body>\n              <Alert variant='danger'>\n                Are you sure you want to remove this?\n                <br />\n                <b>\n                  {removeInfo.tier\n                    ? `${removeInfo.tier}s - ${removeInfo.name} - ${removeInfo.uid}`\n                    : `Category: ${removeInfo.cat}`}\n                </b>\n              </Alert>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={abortRemove}>\n                Don't remove\n              </Button>\n              <Button variant='danger' onClick={confirmRemove}>\n                Yes, do it.\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n        {showResult && errorLog.length > 0 && (\n          <Modal show backdrop='static' keyboard={false}>\n            <Modal.Header>Error encountered</Modal.Header>\n            <Modal.Body>\n              <Alert variant='danger'>\n                {errorLog.length} error(s) encountered in these lines:\n              </Alert>\n              <div className='import-error-log-container'>\n                {errorLog.map((l, i) => (\n                  <div>\n                    <span className='error-log-index unselectable'>\n                      {i + 1}&nbsp;\n                    </span>\n                    {l}\n                  </div>\n                ))}\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={closeImportResultModal}>\n                OK\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n        {isCreatingNewCat && (\n          <Modal show>\n            <Modal.Header closeButton>New sub category</Modal.Header>\n            <Modal.Body>\n              <Form.Control\n                id='new-subcat-input'\n                placeholder='Marvel Cinematic Universe'\n                autoFocus\n                onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) =>\n                  fireSubmitOnEnter(e, \"new-subcat-input-button\")\n                }\n              />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant='primary'\n                id='new-subcat-input-button'\n                onClick={addSub}\n              >\n                ADD\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n        {showMergeablesModal && (\n          <MergeablesModal\n            invData={invData}\n            handleMerge={handleMerge}\n            closeModal={toggleMergeablesModal}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}