{"version":3,"sources":["utils/general-utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cardSort","card1","card2","name","tier","App","useState","invData","setInvData","editCat","setEditCat","editUid","setEditUid","inputCardValue","setInputCardValue","useEffect","loadedInv","localStorage","getItem","JSON","parse","document","onkeyup","e","key","getElementById","style","setProperty","setItem","stringify","handleInputChange","target","value","addNewCard","persist","cat","dataset","handleNewCardSubmit","inputString","replace","uid","Number","temp_vals","split","map","word","trim","length","slice","join","splitString","card","find","c","alert","filter","sort","removeProperty","Object","keys","forEach","preventDefault","removeCard","tagName","parentElement","click","editCard","old","firstElementChild","innerHTML","className","title","data-cat","onClick","id","type","autoFocus","onChange","placeholder","i","data-uid","htmlFor","accept","event","file","files","console","log","reader","FileReader","readAsText","onload","evt","removed_locks","result","built_inv","last_cat","line","startsWith","push","current_cat","sortedInv","k","window","location","reload","onerror","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.858ec9f0.chunk.js","sourcesContent":["import { ICard } from 'model/card.model';\n\nexport const cardSort = (card1:ICard, card2:ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier > card2.tier) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1\n    }\n  }\n};","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cardSort } from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\n\nconst App = () => {\n  const [invData, setInvData] = useState<any>(null);\n  const [editCat, setEditCat] = useState(\"\");\n  const [editUid, setEditUid] = useState(0);\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    if (loadedInv) {\n      setInvData(JSON.parse(loadedInv));\n    }\n  }, []);\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        setEditCat(\"\");\n        setInputCardValue(\"\");\n        document\n          .getElementById(editUid + \"\")?.style.setProperty('text-decoration', 'none');\n        setEditUid(0);\n      }\n    };\n  }, [editUid]);\n\n  useEffect(() => {\n    if (editCat) {\n    }\n  }, [editCat]);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n  }, [invData]);\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    setEditCat(cat);\n    setInputCardValue(\"\");\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\").replace(\":lock:\", \"\");\n    let tier = 0;\n    let uid = 0;\n    let name = \"\";\n    if (inputString?.[0] === \":\") {\n      // copied from inv\n      tier = Number(inputString[1]);\n      const temp_vals = [\n        ...inputString.split(\"-\").map((word: string) => word.trim()),\n      ];\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n    } else {\n      let temp_vals = [];\n      let splitString = \"\";\n      if (inputString?.[3] === \"-\") {\n        splitString = \"-\";\n      } else {\n        splitString = \" \";\n      }\n      temp_vals = [\n        ...inputString.split(splitString).map((word: string) => word.trim()),\n      ];\n      tier = Number(inputString[0]);\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals\n        .slice(1, temp_vals.length - 1)\n        .join(splitString === \"-\" ? \" - \" : splitString);\n    }\n\n    if (!tier || !name || !uid) {\n      alert(\"Non valid input, abort abort!\");\n      return;\n    }\n\n    if (editUid) {\n      // edit existing\n      const card = (invData[editCat] as ICard[]).find(c => c.uid === editUid);\n      // if (!card) BOH\n      if (name !== card?.name) {\n        alert(\n          \"Attention: you input a different card name, the old card will be replaced.\"\n        );\n      }\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat].filter((c: ICard) => c.uid !== editUid),\n          {\n            tier,\n            name,\n            uid,\n          },\n        ].sort(cardSort),\n      });\n\n      document\n        .getElementById(editUid + \"\")\n        ?.style.removeProperty(\"text-decoration\");\n    } else {\n      Object.keys(invData).forEach(cat => {\n        const isDuplicate = !!(invData[cat] as ICard[]).find(\n          c => c.uid === uid\n        );\n        if (isDuplicate) {\n          alert(\"Duplicate UID, please check your data.\");\n          // eslint-disable-next-line no-throw-literal\n          throw \"Duplicate UID, please check your data.\";\n        }\n      });\n\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat],\n          {\n            tier,\n            name,\n            uid,\n          },\n        ].sort(cardSort),\n      });\n    }\n\n    setEditCat(\"\");\n    setEditUid(0);\n    setInputCardValue(\"\");\n    e.preventDefault();\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    setInvData({\n      ...invData,\n      [cat]: [...invData[cat].filter((c: ICard) => c.uid !== uid)],\n    });\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    setEditCat(cat);\n    setEditUid(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        // console.log(evt.target.result);\n        const removed_locks = (evt?.target?.result as string)?.replace(\n          \":lock:\",\n          \"\"\n        );\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = removed_locks.split(\"\\n\");\n        lines.forEach(line => {\n          if (line.startsWith(\":\")) {\n            // is inv item line\n            const tier = Number(line[1]);\n\n            const temp_vals = [...line.split(\"-\").map(word => word.trim())];\n            const uid = Number(temp_vals[temp_vals.length - 1]);\n            const name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n            if (!last_cat) {\n              // eslint-disable-next-line no-throw-literal\n              throw \"error, bye\";\n            } else {\n              built_inv[last_cat].push({\n                tier,\n                name,\n                uid,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)].sort();\n        keys.forEach(k => {\n          sortedInv[k] = built_inv[k].sort(cardSort);\n        });\n\n        localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n        window.location.reload();\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n  return (\n    <div className='container'>\n      {!invData ? (\n        <div className='file-input-container'>\n          <label htmlFor='initial-inv-input'>\n            Hi, please upload inventory text file.\n          </label>\n          <br />\n          <input\n            type='file'\n            name='initial-inv-input'\n            id='initial-inv-input'\n            accept='text/plain'\n            onChange={handleInvInput}\n          />\n        </div>\n      ) : (\n        Object.keys(invData).map(cat => {\n          return (\n            <div key={cat} className='cat'>\n              <div className='cat-header'>\n                <b>{cat}</b>\n                <span\n                  className='abs-right-button'\n                  title='Add a new card'\n                  data-cat={cat}\n                  onClick={addNewCard}\n                >\n                  +\n                </span>\n              </div>\n              <div className='cat-body'>\n                {editCat === cat && (\n                  <div id='new-card-form'>\n                    <div className='card-format'>\n                      ?\n                      <span className='card-format-info'>\n                        Copy from inv:\n                        <br />\n                        <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                        <br />\n                        or manually insert\n                        <br />\n                        <b>2s Hawkeye (Kate Bishop) 2333</b>\n                      </span>\n                    </div>\n                    <input\n                      id='new-card-input-box'\n                      className='new-card-input-box'\n                      type='text'\n                      autoFocus\n                      value={inputCardValue}\n                      onChange={handleInputChange}\n                      placeholder='2s Hawkeye (Kate Bishop) 2333'\n                    />\n                    <input\n                      type='button'\n                      value='✓'\n                      onClick={handleNewCardSubmit}\n                    />\n                  </div>\n                )}\n                <div className=\"hide-overflow\">\n                {(invData[cat] as ICard[]).map((card, i) => (\n                  <Fragment key={card.uid}>\n                    {invData[cat]?.[i - 1]?.name !== card.name && <hr />}\n                    <div className={\"card star\" + card.tier} id={card.uid + \"\"}>\n                      <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                      <span\n                        className='edit-card-button unselectable'\n                        data-cat={cat}\n                        data-uid={card.uid}\n                        onClick={editCard}\n                      >\n                        <b>&#9998;</b>\n                      </span>\n                      <span\n                        className='delete-card-button unselectable'\n                        data-cat={cat}\n                        data-uid={card.uid}\n                        onClick={removeCard}\n                      >\n                        <b>&times;</b>\n                      </span>\n                    </div>\n                  </Fragment>\n                ))}\n                </div>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}