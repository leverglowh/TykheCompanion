{"version":3,"sources":["utils/general-utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cardSort","card1","card2","name","tier","App","useState","invData","setInvData","editCat","setEditCat","editUid","setEditUid","inputCardValue","setInputCardValue","useEffect","loadedInv","localStorage","getItem","JSON","parse","setItem","stringify","handleInputChange","e","target","value","addNewCard","persist","cat","dataset","handleNewCardSubmit","inputString","replace","uid","Number","temp_vals","split","map","word","trim","length","slice","join","splitString","console","log","card","find","c","alert","filter","sort","preventDefault","removeCard","tagName","parentElement","click","editCard","old","document","getElementById","style","setProperty","firstElementChild","innerHTML","className","Object","keys","title","data-cat","onClick","id","type","autoFocus","onChange","placeholder","i","data-uid","htmlFor","accept","event","file","files","reader","FileReader","readAsText","onload","evt","removed_locks","result","built_inv","last_cat","forEach","line","startsWith","push","current_cat","sortedInv","k","window","location","reload","onerror","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.32f81af3.chunk.js","sourcesContent":["import { ICard } from 'model/card.model';\n\nexport const cardSort = (card1:ICard, card2:ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier > card2.tier) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1\n    }\n  }\n};","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cardSort } from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\n\nconst App = () => {\n  const [invData, setInvData] = useState<any>(null);\n  const [editCat, setEditCat] = useState(\"\");\n  const [editUid, setEditUid] = useState(0);\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    if (loadedInv) {\n      setInvData(JSON.parse(loadedInv));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n  }, [invData]);\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    setEditCat(cat);\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\").replace(\":lock:\", \"\");\n    let tier = 0;\n    let uid = 0;\n    let name = \"\";\n    if (inputString?.[0] === \":\") {\n      // copied from inv\n      tier = Number(inputString[1]);\n      const temp_vals = [\n        ...inputString.split(\"-\").map((word: string) => word.trim()),\n      ];\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n    } else {\n      let temp_vals = [];\n      let splitString = '';\n      if (inputString?.[3] === '-') {\n        splitString = '-';\n      } else {\n        splitString = ' '\n      }\n      temp_vals = [...inputString.split(splitString).map((word: string) => word.trim()),];\n      tier = Number(inputString[0]);\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(splitString === '-' ? ' - ' : splitString);\n    }\n\n    console.log(tier);\n    console.log(name);\n    console.log(uid);\n    if (editUid) {\n      // edit existing\n      const card = (invData[editCat] as ICard[]).find(c => c.uid === editUid);\n      // if (!card) BOH\n      if (name !== card?.name) {\n        alert('Attention: you input a different card name, the old card will be replaced.')\n      }\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat].filter((c: ICard) => c.uid !== editUid),\n          {\n            tier,\n            name,\n            uid,\n          },\n        ].sort(cardSort),\n      });\n    } else {\n      const isDuplicate = (invData[editCat] as ICard[]).find(\n        c => c.uid === uid\n      );\n      if (isDuplicate) {\n        alert(\"Duplicate UID, please check your data.\");\n        return;\n      }\n\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat],\n          {\n            tier,\n            name,\n            uid,\n          },\n        ].sort(cardSort),\n      });\n    }\n\n    setEditCat(\"\");\n    setEditUid(0);\n    setInputCardValue(\"\");\n    e.preventDefault();\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    setInvData({\n      ...invData,\n      [cat]: [...invData[cat].filter((c: ICard) => c.uid !== uid)],\n    });\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    setEditCat(cat);\n    setEditUid(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        // console.log(evt.target.result);\n        const removed_locks = (evt?.target?.result as string)?.replace(\n          \":lock:\",\n          \"\"\n        );\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = removed_locks.split(\"\\n\");\n        lines.forEach(line => {\n          if (line.startsWith(\":\")) {\n            // is inv item line\n            const tier = Number(line[1]);\n\n            const temp_vals = [...line.split(\"-\").map(word => word.trim())];\n            const uid = Number(temp_vals[temp_vals.length - 1]);\n            const name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n            if (!last_cat) {\n              // eslint-disable-next-line no-throw-literal\n              throw \"error, bye\";\n            } else {\n              built_inv[last_cat].push({\n                tier,\n                name,\n                uid,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)].sort();\n        keys.forEach(k => {\n          sortedInv[k] = built_inv[k].sort(cardSort);\n        });\n\n        localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n        window.location.reload();\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n  return (\n    <div className='container'>\n      {!invData ? (\n        <div className='file-input-container'>\n          <label htmlFor='initial-inv-input'>\n            Hi, please upload inventory text file.\n          </label>\n          <br />\n          <input\n            type='file'\n            name='initial-inv-input'\n            id='initial-inv-input'\n            accept='text/plain'\n            onChange={handleInvInput}\n          />\n        </div>\n      ) : (\n        Object.keys(invData).map(cat => {\n          return (\n            <div key={cat} className='cat'>\n              <div className='cat-header'>\n                <b>{cat}</b>\n                <span\n                  className='abs-right-button'\n                  title='Add a new card'\n                  data-cat={cat}\n                  onClick={addNewCard}\n                >\n                  +\n                </span>\n              </div>\n              <div className='cat-body'>\n                {editCat === cat && (\n                  <div id='new-card-form'>\n                    <div className='card-format'>\n                      ?\n                      <span className='card-format-info'>\n                        Copy from inv:\n                        <br />\n                        <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                        <br />\n                        or manually insert\n                        <br />\n                        <b>2s Hawkeye (Kate Bishop) 2333</b>\n                      </span>\n                    </div>\n                    <input\n                      id='new-card-input-box'\n                      className='new-card-input-box'\n                      type='text'\n                      autoFocus\n                      value={inputCardValue}\n                      onChange={handleInputChange}\n                      placeholder='2s Hawkeye (Kate Bishop) 2333'\n                    />\n                    <input\n                      type='button'\n                      value='✓'\n                      onClick={handleNewCardSubmit}\n                    />\n                  </div>\n                )}\n                {(invData[cat] as ICard[]).map((card, i) => (\n                  <Fragment key={card.uid}>\n                    {invData[cat]?.[i - 1]?.name !== card.name && <hr />}\n                    <div className={\"card star\" + card.tier} id={card.uid + \"\"}>\n                      <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                      <span\n                        className='edit-card-button unselectable'\n                        data-cat={cat}\n                        data-uid={card.uid}\n                        onClick={editCard}\n                      >\n                        <b>&#9998;</b>\n                      </span>\n                      <span\n                        className='delete-card-button unselectable'\n                        data-cat={cat}\n                        data-uid={card.uid}\n                        onClick={removeCard}\n                      >\n                        <b>&times;</b>\n                      </span>\n                    </div>\n                  </Fragment>\n                ))}\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}