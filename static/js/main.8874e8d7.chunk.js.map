{"version":3,"sources":["utils/general-utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CARD_INPUT_REGEX","cardSort","card1","card2","name","tier","App","useState","invData","setInvData","editCat","setEditCat","editUid","setEditUid","inputCardValue","setInputCardValue","removeInfo","setRemoveInfo","errorLog","setErrorLog","showResult","setShowResult","createNewCat","setCreateNewCat","remoteSync","useCallback","data","binId","localStorage","getItem","req","XMLHttpRequest","onreadystatechange","readyState","DONE","console","log","JSON","parse","response","open","setRequestHeader","send","stringify","setItem","metadata","id","alert","useEffect","loadedInv","document","onkeyup","e","key","getElementById","style","setProperty","dataCheck","uid","uidString","length","includes","handleInputChange","target","value","handleInputKeyUp","click","addNewCard","persist","cat","dataset","parseCard","line","test","Number","temp_vals","split","map","word","trim","filter","w","slice","join","match","handleNewCardSubmit","inputString","replace","preventDefault","clear","window","location","reload","parsedCard","card","find","c","sort","removeProperty","Object","keys","forEach","removeCard","tagName","toBeRemoved","parentElement","editCard","old","firstElementChild","innerHTML","className","title","data-cat","onClick","type","autoFocus","onChange","onKeyUp","placeholder","i","data-uid","htmlFor","accept","event","file","files","reader","FileReader","readAsText","onload","evt","removed_locks","result","built_inv","last_cat","lines","invalidCounter","tempLog","startsWith","push","current_cat","sortedInv","k","onerror","href","encodeURIComponent","download","display","Modal","show","backdrop","keyboard","Header","Body","Alert","variant","Footer","Button","copy","l","closeButton","Form","Control","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8874e8d7.chunk.js","sourcesContent":["import { ICard } from 'model/card.model';\n\nexport const CARD_INPUT_REGEX = /(^:[1-5]star128:\\W*-\\W*(.+)\\W*-\\W*[0-9]{4}$)|(^[1-5](s|star)?[\\s-]{1}(.+)[\\s-]{1}[0-9]{4}$)/;\n\nexport const cardSort = (card1:ICard, card2:ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier > card2.tier) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1\n    }\n  }\n};","import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cardSort, CARD_INPUT_REGEX } from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nconst App = () => {\n  const [invData, setInvData] = useState<any>(null);\n  const [editCat, setEditCat] = useState(\"\");\n  const [editUid, setEditUid] = useState(0);\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n  const [removeInfo, setRemoveInfo] = useState<{\n    cat: string;\n    tier: number;\n    name: string;\n    uid: number;\n  } | null>(null);\n  const [errorLog, setErrorLog] = useState<string[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [createNewCat, setCreateNewCat] = useState(false);\n\n  const remoteSync = useCallback((data?: any) => {\n    const binId = localStorage.getItem(\"binId\");\n    if (!binId) {\n      // create a new bin\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          localStorage.setItem(\"binId\", JSON.parse(req.response).metadata.id);\n          alert('Save this id so you can restore your inv in future: ' + JSON.parse(req.response).metadata.id);\n        }\n      };\n\n      req.open(\"POST\", \"https://api.jsonbin.io/v3/b\", true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\"X-BIN-PRIVATE\", \"false\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem('inv'));\n    } else {\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          console.log(JSON.parse(req.response));\n        }\n      };\n\n      req.open(\"PUT\", \"https://api.jsonbin.io/v3/b/\" + binId, true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem('inv'));\n    }\n  }, []);\n  \n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    if (loadedInv) {\n      setInvData(JSON.parse(loadedInv));\n      remoteSync(JSON.parse(loadedInv));\n    }\n  }, [remoteSync]);\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        setEditCat(\"\");\n        setInputCardValue(\"\");\n        document\n          .getElementById(editUid + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        setEditUid(0);\n      }\n    };\n  }, [editUid]);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n  }, [invData]);\n\n  const dataCheck = (tier: number, name: string, uid: number) => {\n    const uidString = uid + \"\";\n    return !(\n      !tier ||\n      !name ||\n      !uid ||\n      tier > 5 ||\n      tier < 1 ||\n      name.length <= 0 ||\n      uidString.includes(\".\") ||\n      uidString.includes(\",\") ||\n      uidString.length !== 4 ||\n      uid < 1000\n    );\n  };\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const handleInputKeyUp = (e: any) => {\n    if (e.key === \"Enter\") {\n      document.getElementById(\"new-card-input-submit-button\")?.click();\n    }\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    setEditCat(cat);\n    setInputCardValue(\"\");\n  };\n\n  const parseCard = (line: string) => {\n    let tier = 0;\n    let uid = 0;\n    let name = \"\";\n    if (line?.[0] === \":\") {\n      // copied from inv\n      if (!/^:[0-5]star128:/.test(line)) return null;\n\n      tier = Number(line[1]);\n      const temp_vals = [\n        ...line.split(\"-\").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0); // remove empty words\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n    } else {\n      if (!/^[1-5][^0-9]+/.test(line)) return null;\n      let temp_vals = [];\n\n      temp_vals = [\n        ...line.split(\"-\").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0);\n\n      const numberPattern = /\\d+/g;\n\n      tier = Number(temp_vals[0].match(numberPattern)?.[0]) || 0;\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n\n      if (!dataCheck(tier, name, uid)) {\n        // retry with space as split string\n        temp_vals = [\n          ...line.split(\" \").map((word: string) => word.trim()),\n        ].filter(w => w.length > 0);\n\n        tier = Number(line[0]);\n        uid = Number(temp_vals[temp_vals.length - 1]);\n        name = temp_vals.slice(1, temp_vals.length - 1).join(\" \");\n      }\n    }\n\n    // sanity check\n    if (!dataCheck(tier, name, uid)) {\n      return null;\n    }\n\n    return { tier, name, uid };\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\")\n      .replace(\":lock:\", \"\")\n      .trim();\n\n    if (inputString === \"JSON\") {\n      // secret command\n      document.getElementById(\"downloadJSON\")?.click();\n      setEditCat(\"\");\n      setEditUid(0);\n      setInputCardValue(\"\");\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"CLEAR\") {\n      // secret command\n      localStorage.clear();\n      window.location.reload();\n      return;\n    }\n\n    if (inputString === \"CREATE CAT\") {\n      // secret command\n      setCreateNewCat(true);\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"DELETE CAT\") {\n      // secret command\n      setRemoveInfo({ cat: editCat, tier: 0, name: \"\", uid: 0 });\n      e.preventDefault();\n      return;\n    }\n\n    // Sanity check\n    if (!CARD_INPUT_REGEX.test(inputString)) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    const parsedCard = parseCard(inputString);\n\n    if (!parsedCard) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    if (editUid) {\n      // edit existing\n      const card = (invData[editCat] as ICard[]).find(c => c.uid === editUid);\n      // if (!card) BOH\n      if (parsedCard?.name !== card?.name) {\n        alert(\n          \"Attention: you input a different card name, the old card will be replaced.\"\n        );\n      }\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat].filter((c: ICard) => c.uid !== editUid),\n          { ...parsedCard },\n        ].sort(cardSort),\n      });\n\n      document\n        .getElementById(editUid + \"\")\n        ?.style.removeProperty(\"text-decoration\");\n    } else {\n      Object.keys(invData).forEach(cat => {\n        const isDuplicate = !!(invData[cat] as ICard[]).find(\n          c => c.uid === parsedCard?.uid\n        );\n        if (isDuplicate) {\n          alert(\"Duplicate UID, please check your data.\");\n          // eslint-disable-next-line no-throw-literal\n          throw \"Duplicate UID, please check your data.\";\n        }\n      });\n\n      setInvData({\n        ...invData,\n        [editCat]: [...invData[editCat], { ...parsedCard }].sort(cardSort),\n      });\n    }\n\n    setEditCat(\"\");\n    setEditUid(0);\n    setInputCardValue(\"\");\n    e.preventDefault();\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n    const toBeRemoved = invData[cat].find((c: any) => c.uid === uid);\n    setRemoveInfo({ cat, ...toBeRemoved });\n  };\n\n  const confirmRemove = () => {\n    if (!removeInfo?.cat) return;\n    if (!removeInfo.tier && removeInfo.cat) {\n      // removing whole cat\n      const copy = { ...invData };\n      delete copy[removeInfo.cat];\n      setInvData(copy);\n      setRemoveInfo(null);\n      return;\n    }\n    if (!removeInfo.uid) return;\n    setInvData({\n      ...invData,\n      [removeInfo.cat]: [\n        ...invData[removeInfo.cat].filter(\n          (c: ICard) => c.uid !== removeInfo.uid\n        ),\n      ],\n    });\n    setRemoveInfo(null);\n  };\n\n  const abortRemove = () => {\n    setRemoveInfo(null);\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    setEditCat(cat);\n    setEditUid(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        // console.log(evt.target.result);\n        const removed_locks = (evt?.target?.result as string)?.replace(\n          \":lock:\",\n          \"\"\n        );\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = removed_locks.split(\"\\n\");\n        let invalidCounter = 0;\n        const tempLog: string[] = [];\n        lines.forEach(line => {\n          if (line.startsWith(\":\") || /^[0-9]/.test(line)) {\n            // starts with : or number -> is inv item line\n            const parsedCard = parseCard(line.trim());\n\n            if (!last_cat || !parsedCard) {\n              invalidCounter++;\n              tempLog.push(line);\n              return;\n            } else {\n              built_inv[last_cat].push({\n                ...parsedCard,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)];\n        keys.forEach(k => {\n          if (built_inv[k].length === 0) {\n            delete built_inv[k];\n            tempLog.push(k);\n            return;\n          }\n          sortedInv[k] = built_inv[k].sort(cardSort);\n        });\n\n        localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n\n        if (invalidCounter > 0) {\n          setErrorLog(tempLog);\n          setShowResult(true);\n        } else {\n          window.location.reload();\n        }\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n\n  const closeImportResultModal = () => {\n    window.location.reload();\n  };\n\n  const addSub = () => {\n    const cat = (document.getElementById(\n      \"new-subcat-input\"\n    ) as HTMLInputElement).value;\n    if (!cat) {\n      alert(\"Invalid category name\");\n      return;\n    } else {\n      setInvData({\n        ...invData,\n        [cat]: [],\n      });\n      setCreateNewCat(false);\n      setEditCat(\"\");\n      setEditUid(0);\n      setInputCardValue(\"\");\n    }\n  };\n  return (\n    <div className='main-container'>\n      {!invData ? (\n        <div className='file-input-container'>\n          <label htmlFor='initial-inv-input'>\n            Hi, please upload inventory text file.\n          </label>\n          <br />\n          <input\n            type='file'\n            name='initial-inv-input'\n            id='initial-inv-input'\n            accept='text/plain'\n            onChange={handleInvInput}\n          />\n        </div>\n      ) : (\n        Object.keys(invData)\n          .sort()\n          .map(cat => {\n            return (\n              <div key={cat} className='cat'>\n                <div className='cat-header'>\n                  <b>{cat}</b>\n                  <span\n                    className='abs-right-button'\n                    title='Add a new card'\n                    data-cat={cat}\n                    onClick={addNewCard}\n                  >\n                    +\n                  </span>\n                </div>\n                <div className='cat-body'>\n                  {editCat === cat && (\n                    <div id='new-card-form'>\n                      <div className='card-format'>\n                        ?\n                        <span className='card-format-info'>\n                          Copy from inv:\n                          <br />\n                          <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                          <br />\n                          or manually insert\n                          <br />\n                          <b>2s Hawkeye (Kate Bishop) 2333</b>\n                        </span>\n                      </div>\n                      <input\n                        id='new-card-input-box'\n                        className='new-card-input-box'\n                        type='text'\n                        autoFocus\n                        value={inputCardValue}\n                        onChange={handleInputChange}\n                        onKeyUp={handleInputKeyUp}\n                        placeholder='2s Hawkeye (Kate Bishop) 2333'\n                      />\n                      <input\n                        type='button'\n                        id='new-card-input-submit-button'\n                        value='✓'\n                        onClick={handleNewCardSubmit}\n                      />\n                    </div>\n                  )}\n                  <div className='hide-overflow'>\n                    {(invData[cat] as ICard[]).map((card, i) => (\n                      <Fragment key={card.uid}>\n                        {invData[cat]?.[i - 1]?.name !== card.name && <hr />}\n                        <div\n                          className={\"card-line star\" + card.tier}\n                          id={card.uid + \"\"}\n                        >\n                          <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                          <span\n                            className='edit-card-button unselectable'\n                            data-cat={cat}\n                            data-uid={card.uid}\n                            onClick={editCard}\n                          >\n                            <b>&#9998;</b>\n                          </span>\n                          <span\n                            className='delete-card-button unselectable'\n                            data-cat={cat}\n                            data-uid={card.uid}\n                            onClick={removeCard}\n                          >\n                            <b>&times;</b>\n                          </span>\n                        </div>\n                      </Fragment>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })\n      )}\n      <a\n        id='downloadJSON'\n        href={\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(invData))\n        }\n        download='inv.json'\n        style={{ display: \"none\" }}\n      >\n        DOWNLOAD JSON\n      </a>\n      {removeInfo && (\n        <Modal show backdrop='static' keyboard={false}>\n          <Modal.Header>Are you sure?</Modal.Header>\n          <Modal.Body>\n            <Alert variant='danger'>\n              Are you sure you want to remove this?\n              <br />\n              <b>\n                {removeInfo.tier\n                  ? `${removeInfo.tier}s - ${removeInfo.name} - ${removeInfo.uid}`\n                  : `Category: ${removeInfo.cat}`}\n              </b>\n            </Alert>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={abortRemove}>\n              Don't remove\n            </Button>\n            <Button variant='danger' onClick={confirmRemove}>\n              Yes, do it.\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n      {showResult && errorLog.length > 0 && (\n        <Modal show backdrop='static' keyboard={false}>\n          <Modal.Header>Error encountered</Modal.Header>\n          <Modal.Body>\n            <Alert variant='danger'>\n              {errorLog.length} error(s) encountered in these lines:\n            </Alert>\n            <div className='import-error-log-container'>\n              {errorLog.map((l, i) => (\n                <div>\n                  <span className='error-log-index unselectable'>\n                    {i + 1}&nbsp;\n                  </span>\n                  {l}\n                </div>\n              ))}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={closeImportResultModal}>\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n      {createNewCat && (\n        <Modal show>\n          <Modal.Header closeButton>New sub category</Modal.Header>\n          <Modal.Body>\n            <Form.Control\n              id='new-subcat-input'\n              placeholder='Marvel Cinematic Universe'\n              autoFocus\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='primary' onClick={addSub}>\n              ADD\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}