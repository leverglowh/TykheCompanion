{"version":3,"sources":["utils/general-utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CARD_INPUT_REGEX","cardSort","card1","card2","name","tier","App","useState","invData","setInvData","editCat","setEditCat","editUid","setEditUid","inputCardValue","setInputCardValue","removeInfo","setRemoveInfo","errorLog","setErrorLog","showResult","setShowResult","createNewCat","setCreateNewCat","remoteSync","useCallback","data","binId","localStorage","getItem","req","XMLHttpRequest","onreadystatechange","readyState","DONE","console","log","JSON","parse","response","metadata","open","setRequestHeader","send","stringify","setItem","id","alert","fetchDataFromJsonBin","inv","record","document","getElementById","value","clear","Object","keys","every","cat","Array","isArray","card","dataCheck","uid","window","location","reload","useEffect","loadedInv","onkeyup","e","key","style","setProperty","uidString","length","includes","handleInputChange","target","handleInputKeyUp","elementId","click","addNewCard","persist","dataset","parseCard","line","test","Number","temp_vals","split","map","word","trim","filter","w","slice","join","match","handleNewCardSubmit","inputString","replace","preventDefault","parsedCard","find","c","sort","removeProperty","some","removeCard","tagName","toBeRemoved","parentElement","editCard","old","firstElementChild","innerHTML","className","title","data-cat","onClick","type","autoFocus","onChange","onKeyUp","placeholder","i","data-uid","accept","event","file","files","reader","FileReader","readAsText","onload","evt","removed_locks","result","built_inv","last_cat","lines","invalidCounter","tempLog","forEach","startsWith","push","current_cat","sortedInv","k","onerror","Form","Control","Button","href","encodeURIComponent","download","display","Modal","show","backdrop","keyboard","Header","Body","Alert","variant","Footer","copy","l","closeButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4PAEaA,G,MAAmB,+FAEnBC,EAAW,SAACC,EAAaC,GACpC,OAAID,EAAME,OAASD,EAAMC,KACnBF,EAAMG,KAAOF,EAAME,MACb,EACCH,EAAMG,KAAOF,EAAME,KACrB,EAEA,EAGLH,EAAME,KAAOD,EAAMC,MACb,EAED,G,sCC4pBEE,EApqBH,WAAO,IAAD,EACcC,mBAAc,MAD5B,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,mBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAI4BN,mBAAS,IAJrC,mBAITO,EAJS,KAIOC,EAJP,OAKoBR,mBAK1B,MAVM,mBAKTS,EALS,KAKGC,EALH,OAWgBV,mBAAmB,IAXnC,mBAWTW,EAXS,KAWCC,EAXD,OAYoBZ,oBAAS,GAZ7B,mBAYTa,EAZS,KAYGC,EAZH,OAawBd,oBAAS,GAbjC,mBAaTe,EAbS,KAaKC,EAbL,KAeVC,EAAaC,uBAAY,SAACC,GAC9B,IAAMC,EAAQC,aAAaC,QAAQ,SACnC,GAAKF,EAsBE,CACL,IAAIG,EAAM,IAAIC,eAEdD,EAAIE,mBAAqB,WACnBF,EAAIG,aAAeF,eAAeG,MACpCC,QAAQC,IAAIC,KAAKC,MAAMR,EAAIS,UAAUC,SAAW,eAAiB,eAIrEV,EAAIW,KAAK,MAAO,+BAAiCd,GAAO,GACxDG,EAAIY,iBAAiB,eAAgB,oBACrCZ,EAAIY,iBACF,eACA,gEAEFZ,EAAIa,KAAKjB,EAAOW,KAAKO,UAAUlB,GAAQE,aAAaC,QAAQ,YArClD,CAEV,IAAIC,EAAM,IAAIC,eAEdD,EAAIE,mBAAqB,WACnBF,EAAIG,aAAeF,eAAeG,OACpCN,aAAaiB,QAAQ,QAASR,KAAKC,MAAMR,EAAIS,UAAUC,SAASM,IAChEC,MACE,uDACEV,KAAKC,MAAMR,EAAIS,UAAUC,SAASM,MAK1ChB,EAAIW,KAAK,OAAQ,+BAA+B,GAChDX,EAAIY,iBAAiB,eAAgB,oBACrCZ,EAAIY,iBAAiB,gBAAiB,SACtCZ,EAAIY,iBACF,eACA,gEAEFZ,EAAIa,KAAKjB,EAAOW,KAAKO,UAAUlB,GAAQE,aAAaC,QAAQ,WAkB7D,IAEGmB,EAAuBvB,uBAAY,SAACE,GACxC,IAAIG,EAAM,IAAIC,eAEdD,EAAIE,mBAAqB,WACvB,GAAIF,EAAIG,aAAeF,eAAeG,KAAM,CAC1C,IAAMe,EAAMZ,KAAKC,MAAMR,EAAIS,UAAUW,OACrC,GAAmB,kBAARD,EAQT,OAPAF,MACE,oEAEDI,SAASC,eACR,mBACqBC,MAAQ,QAC/BzB,aAAa0B,QAWf,IARaC,OAAOC,KAAKP,GACJQ,OACnB,SAAAC,GAAG,OACHC,MAAMC,QAAQX,EAAIS,KAChBT,EAAIS,GAAKD,OAAM,SAACI,GAAD,OACbC,EAAUD,EAAKxD,KAAMwD,EAAKzD,KAAMyD,EAAKE,WAezC,OAPAhB,MACE,oEAEDI,SAASC,eACR,mBACqBC,MAAQ,QAC/BzB,aAAa0B,QAVb1B,aAAaiB,QAAQ,MAAOR,KAAKO,UAAUK,IAC3CrB,aAAaiB,QAAQ,QAASlB,GAC9BqC,OAAOC,SAASC,WActBpC,EAAIW,KAAK,MAAT,sCAA+Cd,EAA/C,YAA+D,GAC/DG,EAAIa,SACH,IAEHwB,qBAAU,WACR,IAAMC,EAAYxC,aAAaC,QAAQ,OACjCF,EAAQC,aAAaC,QAAQ,SAC/BuC,GACF3D,EAAW4B,KAAKC,MAAM8B,IACtB5C,EAAWa,KAAKC,MAAM8B,KAElBzC,GACFqB,EAAqBrB,KAGxB,CAACH,EAAYwB,IAEhBmB,qBAAU,WACRhB,SAASkB,QAAU,SAACC,GACO,IAAD,EAAV,WAAVA,EAAEC,MACJ5D,EAAW,IACXI,EAAkB,IAClB,UAAAoC,SACGC,eAAexC,EAAU,WAD5B,SAEI4D,MAAMC,YAAY,kBAAmB,QACzC5D,EAAW,OAGd,CAACD,IAEJuD,qBAAU,WACH3D,GACLoB,aAAaiB,QAAQ,MAAOR,KAAKO,UAAUpC,MAC1C,CAACA,IAEJ,IAcMsD,EAAY,SAACzD,EAAcD,EAAc2D,GAC7C,IAAMW,EAAYX,EAAM,GACxB,SACG1D,IACAD,IACA2D,GACD1D,EAAO,GACPA,EAAO,GACPD,EAAKuE,QAAU,GACfD,EAAUE,SAAS,MACnBF,EAAUE,SAAS,MACE,IAArBF,EAAUC,QACVZ,EAAM,MAIJc,EAAoB,SAACP,GACzBvD,EAAkBuD,EAAEQ,OAAOzB,QAGvB0B,EAAmB,SAACT,EAAQU,GACR,IAAD,EAAT,UAAVV,EAAEC,MACJ,UAAApB,SAASC,eAAe4B,UAAxB,SAAoCC,UAIlCC,EAAa,SAACZ,GAAY,IAAD,IAC7BA,EAAEa,UACF,IAAMzB,EAAG,UAAGY,EAAEQ,cAAL,iBAAG,EAAUM,eAAb,aAAG,EAAmB1B,IAC/B/C,EAAW+C,GACX3C,EAAkB,KAGdsE,EAAY,SAACC,GACjB,IAAIjF,EAAO,EACP0D,EAAM,EACN3D,EAAO,GACX,GAAkB,OAAV,OAAJkF,QAAI,IAAJA,OAAA,EAAAA,EAAO,IAAY,CAErB,IAAK,kBAAkBC,KAAKD,GAAO,OAAO,KAE1CjF,EAAOmF,OAAOF,EAAK,IACnB,IAAMG,EAAY,YACbH,EAAKI,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAkBA,EAAKC,WAC9CC,QAAO,SAAAC,GAAC,OAAIA,EAAEpB,OAAS,KACzBZ,EAAMyB,OAAOC,EAAUA,EAAUd,OAAS,IAC1CvE,EAAOqF,EAAUO,MAAM,EAAGP,EAAUd,OAAS,GAAGsB,KAAK,WAChD,CAAC,IAAD,EACL,IAAK,gBAAgBV,KAAKD,GAAO,OAAO,KACxC,IAAIG,EAAY,GAEhBA,EAAY,YACPH,EAAKI,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAkBA,EAAKC,WAC9CC,QAAO,SAAAC,GAAC,OAAIA,EAAEpB,OAAS,KAIzBtE,EAAOmF,OAAM,UAACC,EAAU,GAAGS,MAFL,eAET,aAAC,EAAoC,KAAO,EACzDnC,EAAMyB,OAAOC,EAAUA,EAAUd,OAAS,IAC1CvE,EAAOqF,EAAUO,MAAM,EAAGP,EAAUd,OAAS,GAAGsB,KAAK,OAEhDnC,EAAUzD,EAAMD,EAAM2D,KAEzB0B,EAAY,YACPH,EAAKI,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAkBA,EAAKC,WAC9CC,QAAO,SAAAC,GAAC,OAAIA,EAAEpB,OAAS,KAEzBtE,EAAOmF,OAAOF,EAAK,IACnBvB,EAAMyB,OAAOC,EAAUA,EAAUd,OAAS,IAC1CvE,EAAOqF,EAAUO,MAAM,EAAGP,EAAUd,OAAS,GAAGsB,KAAK,MAKzD,OAAKnC,EAAUzD,EAAMD,EAAM2D,GAIpB,CAAE1D,OAAMD,OAAM2D,OAHZ,MAMLoC,EAAsB,SAAC7B,GAC3B,IAI4B,EAJtB8B,GAAuBtF,GAAkB,IAC5CuF,QAAQ,SAAU,IAClBR,OAEH,GAAoB,SAAhBO,EAOF,OALA,UAAAjD,SAASC,eAAe,uBAAxB,SAAyC6B,QACzCtE,EAAW,IACXE,EAAW,GACXE,EAAkB,SAClBuD,EAAEgC,iBAIJ,GAAoB,UAAhBF,EAIF,OAFAxE,aAAa0B,aACbU,OAAOC,SAASC,SAIlB,GAAoB,eAAhBkC,EAIF,OAFA7E,GAAgB,QAChB+C,EAAEgC,iBAIJ,GAAoB,eAAhBF,EAIF,OAFAnF,EAAc,CAAEyC,IAAKhD,EAASL,KAAM,EAAGD,KAAM,GAAI2D,IAAK,SACtDO,EAAEgC,iBAKJ,GAAKtG,EAAiBuF,KAAKa,GAA3B,CAKA,IAAMG,EAAalB,EAAUe,GAE7B,GAAKG,EAAL,CAKA,GAAI3F,EAAS,CAAC,IAAD,EAELiD,EAAQrD,EAAQE,GAAqB8F,MAAK,SAAAC,GAAC,OAAIA,EAAE1C,MAAQnD,MAEjD,OAAV2F,QAAU,IAAVA,OAAA,EAAAA,EAAYnG,SAAZ,OAAqByD,QAArB,IAAqBA,OAArB,EAAqBA,EAAMzD,OAC7B2C,MACE,8EAGJtC,EAAW,2BACND,GADK,kBAEPE,EAAU,sBACNF,EAAQE,GAASoF,QAAO,SAACW,GAAD,OAAcA,EAAE1C,MAAQnD,MAD1C,gBAEJ2F,KACLG,KAAKzG,MAGT,UAAAkD,SACGC,eAAexC,EAAU,WAD5B,SAEI4D,MAAMmC,eAAe,uBACpB,CAEL,GADoBpD,OAAOC,KAAKhD,GAASoG,MAAK,SAAAlD,GAAG,OAAKlD,EAAQkD,GAAiBkD,MAAK,SAAA/C,GAAI,OAAIA,EAAKE,OAAL,OAAawC,QAAb,IAAaA,OAAb,EAAaA,EAAYxC,WAGnH,YADAhB,MAAM,0CAIRtC,EAAW,2BACND,GADK,kBAEPE,EAAU,sBAAIF,EAAQE,IAAZ,gBAA2B6F,KAAcG,KAAKzG,MAI7DU,EAAW,IACXE,EAAW,GACXE,EAAkB,IAClBuD,EAAEgC,sBAxCAvD,MAAM,uCAPNA,MAAM,mCAkDJ8D,EAAa,SAACvC,GAAY,IAAD,QAE7B,GADAA,EAAEa,UACuB,MAArBb,EAAEQ,OAAOgC,QAAb,CAIA,IAAMpD,EAAG,UAAGY,EAAEQ,cAAL,iBAAG,EAAUM,eAAb,aAAG,EAAmB1B,IACzBK,EAAMyB,OAAM,UAAClB,EAAEQ,cAAH,iBAAC,EAAUM,eAAX,aAAC,EAAmBrB,KACtC,GAAKL,GAAQK,EAAb,CACA,IAAMgD,EAAcvG,EAAQkD,GAAK8C,MAAK,SAACC,GAAD,OAAYA,EAAE1C,MAAQA,KAC5D9C,EAAc,aAAEyC,OAAQqD,UAPtBzC,EAAEQ,OAAOkC,cAAc/B,SAoCrBgC,EAAW,SAAC3C,GAAY,IAAD,UAE3B,GADAA,EAAEa,UACuB,MAArBb,EAAEQ,OAAOgC,QAAb,CAIA,IAAMpD,EAAG,UAAGY,EAAEQ,cAAL,iBAAG,EAAUM,eAAb,aAAG,EAAmB1B,IACzBK,EAAMyB,OAAM,UAAClB,EAAEQ,cAAH,iBAAC,EAAUM,eAAX,aAAC,EAAmBrB,KACtC,GAAKL,GAAQK,EAAb,CAEA,IAAMmD,EAAM/D,SAASC,eAAeW,EAAM,IAEvC,OAAHmD,QAAG,IAAHA,KAAK1C,MAAMC,YAAY,kBAAmB,gBAC1C9D,EAAW+C,GACX7C,EAAWkD,GACXhD,GAAqB,OAAHmG,QAAG,IAAHA,GAAA,UAAAA,EAAKC,yBAAL,eAAwBC,YAAa,UAZrD9C,EAAEQ,OAAOkC,cAAc/B,SA6G3B,OACE,sBAAKoC,UAAU,iBAAf,UACI7G,EAiCA+C,OAAOC,KAAKhD,GACTkG,OACAf,KAAI,SAAAjC,GACH,OACE,sBAAe2D,UAAU,MAAzB,UACE,sBAAKA,UAAU,aAAf,UACE,4BAAI3D,IACJ,sBACE2D,UAAU,mBACVC,MAAM,iBACNC,WAAU7D,EACV8D,QAAStC,EAJX,kBASF,sBAAKmC,UAAU,WAAf,UACG3G,IAAYgD,GACX,sBAAKZ,GAAG,gBAAR,UACE,sBAAKuE,UAAU,cAAf,cAEE,uBAAMA,UAAU,mBAAhB,2BAEE,uBACA,0EACA,uBAJF,qBAME,uBACA,oEAGJ,uBACEvE,GAAG,qBACHuE,UAAU,qBACVI,KAAK,OACLC,WAAS,EACTrE,MAAOvC,EACP6G,SAAU9C,EACV+C,QAAS,SAAAtD,GAAC,OACRS,EAAiBT,EAAG,iCAEtBuD,YAAY,kCAEd,uBACEJ,KAAK,SACL3E,GAAG,+BACHO,MAAM,SACNmE,QAASrB,OAIf,qBAAKkB,UAAU,gBAAf,SACI7G,EAAQkD,GAAiBiC,KAAI,SAAC9B,EAAMiE,GAAP,eAC7B,eAAC,WAAD,YACG,UAAAtH,EAAQkD,UAAR,mBAAeoE,EAAI,UAAnB,eAAuB1H,QAASyD,EAAKzD,MAAQ,uBAC9C,sBACEiH,UAAW,iBAAmBxD,EAAKxD,KACnCyC,GAAIe,EAAKE,IAAM,GAFjB,UAIE,yCAAUF,EAAKxD,KAAf,eAA0BwD,EAAKzD,KAA/B,cAAyCyD,EAAKE,OAC9C,sBACEsD,UAAU,gCACVE,WAAU7D,EACVqE,WAAUlE,EAAKE,IACfyD,QAASP,EAJX,SAME,yCAEF,sBACEI,UAAU,kCACVE,WAAU7D,EACVqE,WAAUlE,EAAKE,IACfyD,QAASX,EAJX,SAME,4CArBShD,EAAKE,eAjDlBL,MApChB,sBAAK2D,UAAU,uBAAf,UACE,gCACE,qBAAKA,UAAU,kBAAf,oDAGA,uBACA,uBACEI,KAAK,OACLrH,KAAK,oBACL0C,GAAG,oBACHkF,OAAO,aACPL,SA5GW,SAACM,GAAgB,IAAD,IAC/BC,EAAI,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAOnD,cAAV,iBAAG,EAAeqD,aAAlB,aAAG,EAAuB,GAEpC,GADAhG,QAAQC,IAAI8F,GACRA,EAAM,CACR,IAAIE,EAAS,IAAIC,WACjBD,EAAOE,WAAWJ,EAAM,SACxBE,EAAOG,OAAS,SAAUC,GAAM,IAAD,IACvBC,EAAa,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAK1D,cAAT,iBAAI,EAAa4D,cAAjB,aAAG,EAAiCrC,QACrD,SACA,IAGIsC,EAAiB,GACnBC,EAAW,GACTC,EAAQJ,EAAc/C,MAAM,MAC9BoD,EAAiB,EACfC,EAAoB,GAC1BF,EAAMG,SAAQ,SAAA1D,GACZ,GAAIA,EAAK2D,WAAW,MAAQ,SAAS1D,KAAKD,GAAO,CAE/C,IAAMiB,EAAalB,EAAUC,EAAKO,QAElC,IAAK+C,IAAarC,EAGhB,OAFAuC,SACAC,EAAQG,KAAK5D,GAGbqD,EAAUC,GAAUM,KAApB,eACK3C,SAKP,GAAIjB,EAAKX,OAAS,EAAG,CAEnB,IAAMwE,EAAc7D,EAAKO,OACrBsD,IAAgBP,IAEbD,EAAUQ,KAAcR,EAAUQ,GAAe,KAExDP,EAAWO,MAMjB,IAAMC,EAAiB,GACb,YAAO7F,OAAOC,KAAKmF,IACxBK,SAAQ,SAAAK,GACX,GAA4B,IAAxBV,EAAUU,GAAG1E,OAGf,cAFOgE,EAAUU,QACjBN,EAAQG,KAAKG,GAGfD,EAAUC,GAAKV,EAAUU,GAAG3C,KAAKzG,MAGnC2B,aAAaiB,QAAQ,MAAOR,KAAKO,UAAUwG,IAEvCN,EAAiB,GACnB3H,EAAY4H,GACZ1H,GAAc,IAEd2C,OAAOC,SAASC,UAGpBkE,EAAOkB,QAAU,SAAUd,GACzBzF,MAAM,iBA4CJ,gCACE,qBAAKsE,UAAU,kBAAf,qCACA,sBAAKA,UAAU,4BAAf,UACE,cAACkC,EAAA,EAAKC,QAAN,CACE3B,YAAY,2BACZ/E,GAAG,kBACH8E,QAAS,SAACtD,GAAD,OACPS,EAAiBT,EAAG,6BAL1B,OASE,cAACmF,EAAA,EAAD,CAAQ3G,GAAG,yBAAyB0E,QA1WpB,SAAClD,GAAY,IAAD,EAChCxB,EAAU,UAAIK,SAASC,eAC3B,0BADc,aAAG,EAEKC,MAEnBP,EAMLE,EAAqBF,GALnBC,MACE,sEAmWM,4BA4FR,mBACED,GAAG,eACH4G,KACE,gCACAC,mBAAmBtH,KAAKO,UAAUpC,IAEpCoJ,SAAS,WACTpF,MAAO,CAAEqF,QAAS,QAPpB,2BAWC7I,GACC,eAAC8I,EAAA,EAAD,CAAOC,MAAI,EAACC,SAAS,SAASC,UAAU,EAAxC,UACE,cAACH,EAAA,EAAMI,OAAP,4BACA,cAACJ,EAAA,EAAMK,KAAP,UACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,kDAEE,uBACA,4BACGrJ,EAAWX,KAAX,UACMW,EAAWX,KADjB,eAC4BW,EAAWZ,KADvC,cACiDY,EAAW+C,KAD5D,oBAEgB/C,EAAW0C,YAIlC,eAACoG,EAAA,EAAMQ,OAAP,WACE,cAACb,EAAA,EAAD,CAAQY,QAAQ,YAAY7C,QAtQlB,WAClBvG,EAAc,OAqQN,0BAGA,cAACwI,EAAA,EAAD,CAAQY,QAAQ,SAAS7C,QA/Rb,WACpB,GAAI,OAACxG,QAAD,IAACA,OAAD,EAACA,EAAY0C,IAAjB,CACA,IAAK1C,EAAWX,MAAQW,EAAW0C,IAAK,CAEtC,IAAM6G,EAAI,eAAQ/J,GAIlB,cAHO+J,EAAKvJ,EAAW0C,KACvBjD,EAAW8J,QACXtJ,EAAc,MAGXD,EAAW+C,MAChBtD,EAAW,2BACND,GADK,kBAEPQ,EAAW0C,IAFJ,YAGHlD,EAAQQ,EAAW0C,KAAKoC,QACzB,SAACW,GAAD,OAAcA,EAAE1C,MAAQ/C,EAAW+C,WAIzC9C,EAAc,SA4QN,+BAMLG,GAAcF,EAASyD,OAAS,GAC/B,eAACmF,EAAA,EAAD,CAAOC,MAAI,EAACC,SAAS,SAASC,UAAU,EAAxC,UACE,cAACH,EAAA,EAAMI,OAAP,gCACA,eAACJ,EAAA,EAAMK,KAAP,WACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,UACGnJ,EAASyD,OADZ,2CAGA,qBAAK0C,UAAU,6BAAf,SACGnG,EAASyE,KAAI,SAAC6E,EAAG1C,GAAJ,OACZ,gCACE,uBAAMT,UAAU,+BAAhB,UACGS,EAAI,EADP,UAGC0C,aAKT,cAACV,EAAA,EAAMQ,OAAP,UACE,cAACb,EAAA,EAAD,CAAQY,QAAQ,YAAY7C,QApMP,WAC7BxD,OAAOC,SAASC,UAmMR,qBAML5C,GACC,eAACwI,EAAA,EAAD,CAAOC,MAAI,EAAX,UACE,cAACD,EAAA,EAAMI,OAAP,CAAcO,aAAW,EAAzB,8BACA,cAACX,EAAA,EAAMK,KAAP,UACE,cAACZ,EAAA,EAAKC,QAAN,CACE1G,GAAG,mBACH+E,YAAY,4BACZH,WAAS,EACTE,QAAS,SAACtD,GAAD,OACPS,EAAiBT,EAAG,gCAI1B,cAACwF,EAAA,EAAMQ,OAAP,UACE,cAACb,EAAA,EAAD,CACEY,QAAQ,UACRvH,GAAG,0BACH0E,QAvNG,WACb,IAAM9D,EAAOP,SAASC,eACpB,oBACqBC,MAClBK,GAIHjD,EAAW,2BACND,GADK,kBAEPkD,EAAM,MAETnC,GAAgB,GAChBZ,EAAW,IACXE,EAAW,GACXE,EAAkB,KAVlBgC,MAAM,0BA+MA,0BCjpBG2H,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlI,SAASC,eAAe,SAM1BsH,M","file":"static/js/main.e4aa659e.chunk.js","sourcesContent":["import { ICard } from 'model/card.model';\n\nexport const CARD_INPUT_REGEX = /(^:[1-5]star128:\\W*-\\W*(.+)\\W*-\\W*[0-9]{4}$)|(^[1-5](s|star)?[\\s-]{1}(.+)[\\s-]{1}[0-9]{4}$)/;\n\nexport const cardSort = (card1:ICard, card2:ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier > card2.tier) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1\n    }\n  }\n};","import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cardSort, CARD_INPUT_REGEX } from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nconst App = () => {\n  const [invData, setInvData] = useState<any>(null);\n  const [editCat, setEditCat] = useState(\"\");\n  const [editUid, setEditUid] = useState(0);\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n  const [removeInfo, setRemoveInfo] = useState<{\n    cat: string;\n    tier: number;\n    name: string;\n    uid: number;\n  } | null>(null);\n  const [errorLog, setErrorLog] = useState<string[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [createNewCat, setCreateNewCat] = useState(false);\n\n  const remoteSync = useCallback((data?: any) => {\n    const binId = localStorage.getItem(\"binId\");\n    if (!binId) {\n      // create a new bin\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          localStorage.setItem(\"binId\", JSON.parse(req.response).metadata.id);\n          alert(\n            \"Save this id so you can restore your inv in future: \" +\n              JSON.parse(req.response).metadata.id\n          );\n        }\n      };\n\n      req.open(\"POST\", \"https://api.jsonbin.io/v3/b\", true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\"X-BIN-PRIVATE\", \"false\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem(\"inv\"));\n    } else {\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          console.log(JSON.parse(req.response).metadata ? 'Sync success' : 'Sync error');\n        }\n      };\n\n      req.open(\"PUT\", \"https://api.jsonbin.io/v3/b/\" + binId, true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem(\"inv\"));\n    }\n  }, []);\n\n  const fetchDataFromJsonBin = useCallback((binId: string) => {\n    let req = new XMLHttpRequest();\n\n    req.onreadystatechange = () => {\n      if (req.readyState === XMLHttpRequest.DONE) {\n        const inv = JSON.parse(req.response).record;\n        if (typeof inv !== \"object\") {\n          alert(\n            \"Invalid data, please check your backup id or upload an inv file.\"\n          );\n          (document.getElementById(\n            \"backup-id-input\"\n          ) as HTMLInputElement).value = \"\";\n          localStorage.clear();\n          return;\n        }\n        const cats = Object.keys(inv);\n        const isValid = cats.every(\n          cat =>\n          Array.isArray(inv[cat]) &&\n            inv[cat].every((card: any) =>\n              dataCheck(card.tier, card.name, card.uid)\n            )\n        );\n        if (isValid) {\n          localStorage.setItem(\"inv\", JSON.stringify(inv));\n          localStorage.setItem(\"binId\", binId);\n          window.location.reload();\n        } else {\n          alert(\n            \"Invalid data, please check your backup id or upload an inv file.\"\n          );\n          (document.getElementById(\n            \"backup-id-input\"\n          ) as HTMLInputElement).value = \"\";\n          localStorage.clear();\n          return;\n        }\n      }\n    };\n\n    req.open(\"GET\", `https://api.jsonbin.io/v3/b/${binId}/latest`, true);\n    req.send();\n  }, []);\n\n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    const binId = localStorage.getItem(\"binId\");\n    if (loadedInv) {\n      setInvData(JSON.parse(loadedInv));\n      remoteSync(JSON.parse(loadedInv));\n    } else {\n      if (binId) {\n        fetchDataFromJsonBin(binId);\n      }\n    }\n  }, [remoteSync, fetchDataFromJsonBin]);\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        setEditCat(\"\");\n        setInputCardValue(\"\");\n        document\n          .getElementById(editUid + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        setEditUid(0);\n      }\n    };\n  }, [editUid]);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n  }, [invData]);\n\n  const handleBackupIdInput = (e: any) => {\n    const id: string = (document.getElementById(\n      \"backup-id-input\"\n    ) as HTMLInputElement)?.value;\n\n    if (!id) {\n      alert(\n        \"Invalid input, please check your backup id or upload an inv file.\"\n      );\n      return;\n    }\n    fetchDataFromJsonBin(id);\n  };\n\n  const dataCheck = (tier: number, name: string, uid: number) => {\n    const uidString = uid + \"\";\n    return !(\n      !tier ||\n      !name ||\n      !uid ||\n      tier > 5 ||\n      tier < 1 ||\n      name.length <= 0 ||\n      uidString.includes(\".\") ||\n      uidString.includes(\",\") ||\n      uidString.length !== 4 ||\n      uid < 1000\n    );\n  };\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const handleInputKeyUp = (e: any, elementId: string) => {\n    if (e.key === \"Enter\") {\n      document.getElementById(elementId)?.click();\n    }\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    setEditCat(cat);\n    setInputCardValue(\"\");\n  };\n\n  const parseCard = (line: string) => {\n    let tier = 0;\n    let uid = 0;\n    let name = \"\";\n    if (line?.[0] === \":\") {\n      // copied from inv\n      if (!/^:[0-5]star128:/.test(line)) return null;\n\n      tier = Number(line[1]);\n      const temp_vals = [\n        ...line.split(\"-\").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0); // remove empty words\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n    } else {\n      if (!/^[1-5][^0-9]+/.test(line)) return null;\n      let temp_vals = [];\n\n      temp_vals = [\n        ...line.split(\"-\").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0);\n\n      const numberPattern = /\\d+/g;\n\n      tier = Number(temp_vals[0].match(numberPattern)?.[0]) || 0;\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n\n      if (!dataCheck(tier, name, uid)) {\n        // retry with space as split string\n        temp_vals = [\n          ...line.split(\" \").map((word: string) => word.trim()),\n        ].filter(w => w.length > 0);\n\n        tier = Number(line[0]);\n        uid = Number(temp_vals[temp_vals.length - 1]);\n        name = temp_vals.slice(1, temp_vals.length - 1).join(\" \");\n      }\n    }\n\n    // sanity check\n    if (!dataCheck(tier, name, uid)) {\n      return null;\n    }\n\n    return { tier, name, uid };\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\")\n      .replace(\":lock:\", \"\")\n      .trim();\n\n    if (inputString === \"JSON\") {\n      // secret command\n      document.getElementById(\"downloadJSON\")?.click();\n      setEditCat(\"\");\n      setEditUid(0);\n      setInputCardValue(\"\");\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"CLEAR\") {\n      // secret command\n      localStorage.clear();\n      window.location.reload();\n      return;\n    }\n\n    if (inputString === \"CREATE CAT\") {\n      // secret command\n      setCreateNewCat(true);\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"DELETE CAT\") {\n      // secret command\n      setRemoveInfo({ cat: editCat, tier: 0, name: \"\", uid: 0 });\n      e.preventDefault();\n      return;\n    }\n\n    // Sanity check\n    if (!CARD_INPUT_REGEX.test(inputString)) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    const parsedCard = parseCard(inputString);\n\n    if (!parsedCard) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    if (editUid) {\n      // edit existing\n      const card = (invData[editCat] as ICard[]).find(c => c.uid === editUid);\n      // if (!card) BOH\n      if (parsedCard?.name !== card?.name) {\n        alert(\n          \"Attention: you input a different card name, the old card will be replaced.\"\n        );\n      }\n      setInvData({\n        ...invData,\n        [editCat]: [\n          ...invData[editCat].filter((c: ICard) => c.uid !== editUid),\n          { ...parsedCard },\n        ].sort(cardSort),\n      });\n\n      document\n        .getElementById(editUid + \"\")\n        ?.style.removeProperty(\"text-decoration\");\n    } else {\n      const isDuplicate = Object.keys(invData).some(cat => (invData[cat] as ICard[]).some(card => card.uid === parsedCard?.uid));\n      if (isDuplicate) {\n        alert(\"Duplicate UID, please check your data.\");\n        return;\n      }\n\n      setInvData({\n        ...invData,\n        [editCat]: [...invData[editCat], { ...parsedCard }].sort(cardSort),\n      });\n    }\n\n    setEditCat(\"\");\n    setEditUid(0);\n    setInputCardValue(\"\");\n    e.preventDefault();\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n    const toBeRemoved = invData[cat].find((c: any) => c.uid === uid);\n    setRemoveInfo({ cat, ...toBeRemoved });\n  };\n\n  const confirmRemove = () => {\n    if (!removeInfo?.cat) return;\n    if (!removeInfo.tier && removeInfo.cat) {\n      // removing whole cat\n      const copy = { ...invData };\n      delete copy[removeInfo.cat];\n      setInvData(copy);\n      setRemoveInfo(null);\n      return;\n    }\n    if (!removeInfo.uid) return;\n    setInvData({\n      ...invData,\n      [removeInfo.cat]: [\n        ...invData[removeInfo.cat].filter(\n          (c: ICard) => c.uid !== removeInfo.uid\n        ),\n      ],\n    });\n    setRemoveInfo(null);\n  };\n\n  const abortRemove = () => {\n    setRemoveInfo(null);\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    setEditCat(cat);\n    setEditUid(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        const removed_locks = (evt?.target?.result as string)?.replace(\n          \":lock:\",\n          \"\"\n        );\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = removed_locks.split(\"\\n\");\n        let invalidCounter = 0;\n        const tempLog: string[] = [];\n        lines.forEach(line => {\n          if (line.startsWith(\":\") || /^[0-9]/.test(line)) {\n            // starts with : or number -> is inv item line\n            const parsedCard = parseCard(line.trim());\n\n            if (!last_cat || !parsedCard) {\n              invalidCounter++;\n              tempLog.push(line);\n              return;\n            } else {\n              built_inv[last_cat].push({\n                ...parsedCard,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)];\n        keys.forEach(k => {\n          if (built_inv[k].length === 0) {\n            delete built_inv[k];\n            tempLog.push(k);\n            return;\n          }\n          sortedInv[k] = built_inv[k].sort(cardSort);\n        });\n\n        localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n\n        if (invalidCounter > 0) {\n          setErrorLog(tempLog);\n          setShowResult(true);\n        } else {\n          window.location.reload();\n        }\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n\n  const closeImportResultModal = () => {\n    window.location.reload();\n  };\n\n  const addSub = () => {\n    const cat = (document.getElementById(\n      \"new-subcat-input\"\n    ) as HTMLInputElement).value;\n    if (!cat) {\n      alert(\"Invalid category name\");\n      return;\n    } else {\n      setInvData({\n        ...invData,\n        [cat]: [],\n      });\n      setCreateNewCat(false);\n      setEditCat(\"\");\n      setEditUid(0);\n      setInputCardValue(\"\");\n    }\n  };\n  return (\n    <div className='main-container'>\n      {!invData ? (\n        <div className='file-input-container'>\n          <div>\n            <div className='text-align-left'>\n              Hi, please upload inventory text file.\n            </div>\n            <br />\n            <input\n              type='file'\n              name='initial-inv-input'\n              id='initial-inv-input'\n              accept='text/plain'\n              onChange={handleInvInput}\n            />\n          </div>\n          <div>\n            <div className='text-align-left'>Or input the backup id:</div>\n            <div className='backup-id-input-container'>\n              <Form.Control\n                placeholder='607b400f0ed6f819beae5284'\n                id='backup-id-input'\n                onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) =>\n                  handleInputKeyUp(e, \"backup-id-input-button\")\n                }\n              />\n              &nbsp;\n              <Button id='backup-id-input-button' onClick={handleBackupIdInput}>\n                Enter\n              </Button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        Object.keys(invData)\n          .sort()\n          .map(cat => {\n            return (\n              <div key={cat} className='cat'>\n                <div className='cat-header'>\n                  <b>{cat}</b>\n                  <span\n                    className='abs-right-button'\n                    title='Add a new card'\n                    data-cat={cat}\n                    onClick={addNewCard}\n                  >\n                    +\n                  </span>\n                </div>\n                <div className='cat-body'>\n                  {editCat === cat && (\n                    <div id='new-card-form'>\n                      <div className='card-format'>\n                        ?\n                        <span className='card-format-info'>\n                          Copy from inv:\n                          <br />\n                          <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                          <br />\n                          or manually insert\n                          <br />\n                          <b>2s Hawkeye (Kate Bishop) 2333</b>\n                        </span>\n                      </div>\n                      <input\n                        id='new-card-input-box'\n                        className='new-card-input-box'\n                        type='text'\n                        autoFocus\n                        value={inputCardValue}\n                        onChange={handleInputChange}\n                        onKeyUp={e =>\n                          handleInputKeyUp(e, \"new-card-input-submit-button\")\n                        }\n                        placeholder='2s Hawkeye (Kate Bishop) 2333'\n                      />\n                      <input\n                        type='button'\n                        id='new-card-input-submit-button'\n                        value='✓'\n                        onClick={handleNewCardSubmit}\n                      />\n                    </div>\n                  )}\n                  <div className='hide-overflow'>\n                    {(invData[cat] as ICard[]).map((card, i) => (\n                      <Fragment key={card.uid}>\n                        {invData[cat]?.[i - 1]?.name !== card.name && <hr />}\n                        <div\n                          className={\"card-line star\" + card.tier}\n                          id={card.uid + \"\"}\n                        >\n                          <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                          <span\n                            className='edit-card-button unselectable'\n                            data-cat={cat}\n                            data-uid={card.uid}\n                            onClick={editCard}\n                          >\n                            <b>&#9998;</b>\n                          </span>\n                          <span\n                            className='delete-card-button unselectable'\n                            data-cat={cat}\n                            data-uid={card.uid}\n                            onClick={removeCard}\n                          >\n                            <b>&times;</b>\n                          </span>\n                        </div>\n                      </Fragment>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })\n      )}\n      <a\n        id='downloadJSON'\n        href={\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(invData))\n        }\n        download='inv.json'\n        style={{ display: \"none\" }}\n      >\n        DOWNLOAD JSON\n      </a>\n      {removeInfo && (\n        <Modal show backdrop='static' keyboard={false}>\n          <Modal.Header>Are you sure?</Modal.Header>\n          <Modal.Body>\n            <Alert variant='danger'>\n              Are you sure you want to remove this?\n              <br />\n              <b>\n                {removeInfo.tier\n                  ? `${removeInfo.tier}s - ${removeInfo.name} - ${removeInfo.uid}`\n                  : `Category: ${removeInfo.cat}`}\n              </b>\n            </Alert>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={abortRemove}>\n              Don't remove\n            </Button>\n            <Button variant='danger' onClick={confirmRemove}>\n              Yes, do it.\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n      {showResult && errorLog.length > 0 && (\n        <Modal show backdrop='static' keyboard={false}>\n          <Modal.Header>Error encountered</Modal.Header>\n          <Modal.Body>\n            <Alert variant='danger'>\n              {errorLog.length} error(s) encountered in these lines:\n            </Alert>\n            <div className='import-error-log-container'>\n              {errorLog.map((l, i) => (\n                <div>\n                  <span className='error-log-index unselectable'>\n                    {i + 1}&nbsp;\n                  </span>\n                  {l}\n                </div>\n              ))}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={closeImportResultModal}>\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n      {createNewCat && (\n        <Modal show>\n          <Modal.Header closeButton>New sub category</Modal.Header>\n          <Modal.Body>\n            <Form.Control\n              id='new-subcat-input'\n              placeholder='Marvel Cinematic Universe'\n              autoFocus\n              onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) =>\n                handleInputKeyUp(e, \"new-subcat-input-button\")\n              }\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='primary'\n              id='new-subcat-input-button'\n              onClick={addSub}\n            >\n              ADD\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}