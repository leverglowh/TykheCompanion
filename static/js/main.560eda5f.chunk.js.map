{"version":3,"sources":["utils/general-utils.ts","components/sub-category-card.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CARD_INPUT_REGEX","cardSort","card1","card2","name","tier","parseCard","line","uid","test","Number","temp_vals","split","map","word","trim","filter","w","length","slice","join","match","dataCheck","uidString","includes","fireSubmitOnEnter","e","elementId","key","document","getElementById","click","SubCategoryCard","props","category","invData","editingUID","editingCategory","updateInvData","updateCreatingNewCat","updateEditingUID","updateRemoveInfo","updateEditingCategory","useState","inputCardValue","setInputCardValue","useEffect","onkeyup","style","setProperty","editCard","persist","target","tagName","cat","dataset","old","firstElementChild","innerHTML","parentElement","removeCard","toBeRemoved","find","c","className","title","data-cat","onClick","id","type","autoFocus","value","onChange","onKeyUp","placeholder","inputString","replace","preventDefault","localStorage","clear","window","location","reload","parsedCard","card","alert","sort","removeProperty","Object","keys","some","i","data-uid","App","setInvData","setEditingCategory","setEditingUID","removeInfo","setRemoveInfo","errorLog","setErrorLog","showResult","setShowResult","isCreatingNewCat","setCreatingNewCat","remoteSync","useCallback","data","binId","getItem","req","XMLHttpRequest","onreadystatechange","readyState","DONE","setItem","Date","valueOf","console","log","JSON","parse","response","metadata","open","setRequestHeader","send","stringify","fetchDataFromJsonBin","inv","record","every","Array","isArray","localData","loadedInv","lastFetch","isFetchedIn1Min","hasLocal","hasRemote","loadedData","newInv","isCreating","info","accept","event","file","files","reader","FileReader","readAsText","onload","evt","removed_locks","result","built_inv","last_cat","lines","invalidCounter","tempLog","forEach","startsWith","push","current_cat","sortedInv","k","onerror","Form","Control","Button","href","encodeURIComponent","download","display","Modal","show","backdrop","keyboard","Header","Body","Alert","variant","Footer","copy","l","closeButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.560eda5f.chunk.js","sourcesContent":["import { ICard } from \"model/card.model\";\n\nexport const CARD_INPUT_REGEX = /(^:[1-5]star128:\\W*-\\W*(.+)\\W*-\\W*[0-9]{4}$)|(^[1-5](s|star)?[\\s-]{1}(.+)[\\s-]{1}[0-9]{4}$)/;\n\nexport const cardSort = (card1: ICard, card2: ICard) => {\n  if (card1.name === card2.name) {\n    if (card1.tier > card2.tier) {\n      return -1;\n    } else if (card1.tier > card2.tier) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    if (card1.name < card2.name) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n};\n\nexport const parseCard = (line: string) => {\n  let tier = 0;\n  let uid = 0;\n  let name = \"\";\n  if (line?.[0] === \":\") {\n    // copied from inv\n    if (!/^:[0-5]star128:/.test(line)) return null;\n\n    tier = Number(line[1]);\n    const temp_vals = [\n      ...line.split(\"-\").map((word: string) => word.trim()),\n    ].filter(w => w.length > 0); // remove empty words\n    uid = Number(temp_vals[temp_vals.length - 1]);\n    name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n  } else {\n    if (!/^[1-5][^0-9]+/.test(line)) return null;\n    let temp_vals = [];\n\n    temp_vals = [...line.split(\"-\").map((word: string) => word.trim())].filter(\n      w => w.length > 0\n    );\n\n    const numberPattern = /\\d+/g;\n\n    tier = Number(temp_vals[0].match(numberPattern)?.[0]) || 0;\n    uid = Number(temp_vals[temp_vals.length - 1]);\n    name = temp_vals.slice(1, temp_vals.length - 1).join(\" - \");\n\n    if (!dataCheck(tier, name, uid)) {\n      // retry with space as split string\n      temp_vals = [\n        ...line.split(\" \").map((word: string) => word.trim()),\n      ].filter(w => w.length > 0);\n\n      tier = Number(line[0]);\n      uid = Number(temp_vals[temp_vals.length - 1]);\n      name = temp_vals.slice(1, temp_vals.length - 1).join(\" \");\n    }\n  }\n\n  // sanity check\n  if (!dataCheck(tier, name, uid)) {\n    return null;\n  }\n\n  return { tier, name, uid };\n};\n\nexport const dataCheck = (tier: number, name: string, uid: number) => {\n  const uidString = uid + \"\";\n  return !(\n    !tier ||\n    !name ||\n    !uid ||\n    tier > 5 ||\n    tier < 1 ||\n    name.length <= 0 ||\n    uidString.includes(\".\") ||\n    uidString.includes(\",\") ||\n    uidString.length !== 4 ||\n    uid < 1000\n  );\n};\n\nexport const fireSubmitOnEnter = (e: any, elementId: string) => {\n  if (e.key === \"Enter\") {\n    document.getElementById(elementId)?.click();\n  }\n};\n","import { ICard } from \"model/card.model\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  cardSort,\n  CARD_INPUT_REGEX,\n  fireSubmitOnEnter,\n  parseCard,\n} from \"utils/general-utils\";\n\nexport interface ISubCategoryCardProps {\n  category: string;\n  invData: any;\n  editingCategory: string;\n  editingUID: number;\n  updateInvData: (newInv: any) => void;\n  updateEditingUID: (uid: number) => void;\n  updateRemoveInfo: (info: any) => void;\n  updateEditingCategory: (cat: string) => void;\n  updateCreatingNewCat: (isCreating: boolean) => void;\n}\n\nconst SubCategoryCard: React.FC<ISubCategoryCardProps> = props => {\n  const {\n    category,\n    invData,\n    editingUID,\n    editingCategory,\n    updateInvData,\n    updateCreatingNewCat,\n    updateEditingUID,\n    updateRemoveInfo,\n    updateEditingCategory,\n  } = props;\n  const [inputCardValue, setInputCardValue] = useState(\"\");\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        updateEditingCategory(\"\");\n        setInputCardValue(\"\");\n        document\n          .getElementById(editingUID + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        updateEditingUID(0);\n      }\n    };\n  }, [editingUID, updateEditingUID, updateEditingCategory]);\n\n  const handleInputChange = (e: any) => {\n    setInputCardValue(e.target.value);\n  };\n\n  const addNewCard = (e: any) => {\n    e.persist();\n    const cat = e.target?.dataset?.cat;\n    updateEditingCategory(cat);\n    setInputCardValue(\"\");\n  };\n\n  const editCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n\n    const old = document.getElementById(uid + \"\");\n\n    old?.style.setProperty(\"text-decoration\", \"line-through\");\n    updateEditingCategory(cat);\n    updateEditingUID(uid);\n    setInputCardValue(old?.firstElementChild?.innerHTML || \"\");\n  };\n\n  const removeCard = (e: any) => {\n    e.persist();\n    if (e.target.tagName === \"B\") {\n      e.target.parentElement.click();\n      return;\n    }\n    const cat = e.target?.dataset?.cat;\n    const uid = Number(e.target?.dataset?.uid);\n    if (!cat || !uid) return;\n    const toBeRemoved = invData[cat].find((c: any) => c.uid === uid);\n    updateRemoveInfo({ cat, ...toBeRemoved });\n  };\n\n  const handleNewCardSubmit = (e: any) => {\n    const inputString: string = (inputCardValue || \"\")\n      .replace(\":lock:\", \"\")\n      .trim();\n\n    if (inputString === \"JSON\") {\n      // secret command\n      document.getElementById(\"downloadJSON\")?.click();\n      updateEditingCategory(\"\");\n      updateEditingUID(0);\n      setInputCardValue(\"\");\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"CLEAR\") {\n      // secret command\n      localStorage.clear();\n      window.location.reload();\n      return;\n    }\n\n    if (inputString === \"CREATE CAT\") {\n      // secret command\n      updateCreatingNewCat(true);\n      e.preventDefault();\n      return;\n    }\n\n    if (inputString === \"DELETE CAT\") {\n      // secret command\n      updateRemoveInfo({ cat: editingCategory, tier: 0, name: \"\", uid: 0 });\n      e.preventDefault();\n      return;\n    }\n\n    // Sanity check\n    if (!CARD_INPUT_REGEX.test(inputString)) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    const parsedCard = parseCard(inputString);\n\n    if (!parsedCard) {\n      alert(\"Non valid input, abort! abort!\");\n      return;\n    }\n\n    if (editingUID) {\n      // edit existing\n      const card = (invData[editingCategory] as ICard[]).find(\n        c => c.uid === editingUID\n      );\n      // if (!card) BOH\n      if (parsedCard?.name !== card?.name) {\n        alert(\n          \"Attention: you input a different card name, the old card will be replaced.\"\n        );\n      }\n      updateInvData({\n        ...invData,\n        [editingCategory]: [\n          ...invData[editingCategory].filter(\n            (c: ICard) => c.uid !== editingUID\n          ),\n          { ...parsedCard },\n        ].sort(cardSort),\n      });\n\n      document\n        .getElementById(editingUID + \"\")\n        ?.style.removeProperty(\"text-decoration\");\n    } else {\n      const isDuplicate = Object.keys(invData).some(cat =>\n        (invData[cat] as ICard[]).some(card => card.uid === parsedCard?.uid)\n      );\n      if (isDuplicate) {\n        alert(\"Duplicate UID, please check your data.\");\n        return;\n      }\n\n      updateInvData({\n        ...invData,\n        [editingCategory]: [\n          ...invData[editingCategory],\n          { ...parsedCard },\n        ].sort(cardSort),\n      });\n    }\n\n    updateEditingUID(0);\n    setInputCardValue(\"\");\n    updateEditingCategory(\"\");\n    e.preventDefault();\n  };\n\n  return (\n    <div className='cat'>\n      <div className='cat-header'>\n        <b>{category}</b>\n        <span\n          className='abs-right-button'\n          title='Add a new card'\n          data-cat={category}\n          onClick={addNewCard}\n        >\n          +\n        </span>\n      </div>\n      <div className='cat-body'>\n        {editingCategory === category && (\n          <div id='new-card-form'>\n            <div className='card-format'>\n              ?\n              <span className='card-format-info'>\n                Copy from inv:\n                <br />\n                <b>:2star128: - Hawkeye (Kate Bishop) - 2333</b>\n                <br />\n                or manually insert\n                <br />\n                <b>2s Hawkeye (Kate Bishop) 2333</b>\n              </span>\n            </div>\n            <input\n              id='new-card-input-box'\n              className='new-card-input-box'\n              type='text'\n              autoFocus\n              value={inputCardValue}\n              onChange={handleInputChange}\n              onKeyUp={e =>\n                fireSubmitOnEnter(e, \"new-card-input-submit-button\")\n              }\n              placeholder='2s Hawkeye (Kate Bishop) 2333'\n            />\n            <input\n              type='button'\n              id='new-card-input-submit-button'\n              value='✓'\n              onClick={handleNewCardSubmit}\n            />\n          </div>\n        )}\n        <div className='hide-overflow'>\n          {(invData[category] as ICard[]).map((card, i) => (\n            <Fragment key={card.uid}>\n              {invData[category]?.[i - 1]?.name !== card.name && <hr />}\n              <div className={\"card-line star\" + card.tier} id={card.uid + \"\"}>\n                <span>{`${card.tier}s - ${card.name} - ${card.uid}`}</span>\n                <span\n                  className='edit-card-button unselectable'\n                  data-cat={category}\n                  data-uid={card.uid}\n                  onClick={editCard}\n                >\n                  <b>&#9998;</b>\n                </span>\n                <span\n                  className='delete-card-button unselectable'\n                  data-cat={category}\n                  data-uid={card.uid}\n                  onClick={removeCard}\n                >\n                  <b>&times;</b>\n                </span>\n              </div>\n            </Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubCategoryCard;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  cardSort,\n  dataCheck,\n  fireSubmitOnEnter,\n  parseCard,\n} from \"./utils/general-utils\";\nimport { ICard } from \"./model/card.model\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport SubCategoryCard from \"components/sub-category-card\";\n\nconst App = () => {\n  const [invData, setInvData] = useState<any>(null);\n  const [editingCategory, setEditingCategory] = useState(\"\");\n  const [editingUID, setEditingUID] = useState(0);\n\n  const [removeInfo, setRemoveInfo] = useState<{\n    cat: string;\n    tier: number;\n    name: string;\n    uid: number;\n  } | null>(null);\n  const [errorLog, setErrorLog] = useState<string[]>([]);\n  const [showResult, setShowResult] = useState(false);\n  const [isCreatingNewCat, setCreatingNewCat] = useState(false);\n\n  const remoteSync = useCallback((data?: any) => {\n    const binId = localStorage.getItem(\"binId\");\n    if (!binId) {\n      // create a new bin\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          const binId = JSON.parse(req.response).metadata.id;\n          if (!binId) return;\n\n          localStorage.setItem(\"binId\", binId);\n          localStorage.setItem(\"last-fetch\", new Date().valueOf() + \"\");\n          alert(\n            \"Save this id so you can restore your inv in future: \" +\n              JSON.parse(req.response).metadata.id\n          );\n        }\n      };\n\n      req.open(\"POST\", \"https://api.jsonbin.io/v3/b\", true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\"X-BIN-PRIVATE\", \"false\");\n      req.setRequestHeader(\"X-Bin-Versioning\", \"false\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem(\"inv\"));\n    } else {\n      let req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          localStorage.setItem(\"last-fetch\", new Date().valueOf() + \"\");\n          console.log(\n            JSON.parse(req.response).metadata ? \"Sync success\" : \"Sync error\"\n          );\n        }\n      };\n\n      req.open(\"PUT\", \"https://api.jsonbin.io/v3/b/\" + binId, true);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.setRequestHeader(\n        \"X-Master-Key\",\n        \"$2b$10$ckVgM1xPqSGsv8uaycGJNuOEQRN74Rq3HMCQLNpqmKFT37bAZprzC\"\n      );\n      req.send(data ? JSON.stringify(data) : localStorage.getItem(\"inv\"));\n    }\n  }, []);\n\n  const fetchDataFromJsonBin = useCallback((binId: string) => {\n    let req = new XMLHttpRequest();\n\n    req.onreadystatechange = () => {\n      if (req.readyState === XMLHttpRequest.DONE) {\n        const inv = JSON.parse(req.response).record;\n        if (typeof inv !== \"object\") {\n          alert(\n            \"Invalid data, please check your backup id or upload an inv file.\"\n          );\n          (document.getElementById(\n            \"backup-id-input\"\n          ) as HTMLInputElement).value = \"\";\n          localStorage.clear();\n          return;\n        }\n        const cats = Object.keys(inv);\n        const isValid = cats.every(\n          cat =>\n            Array.isArray(inv[cat]) &&\n            inv[cat].every((card: any) =>\n              dataCheck(card.tier, card.name, card.uid)\n            )\n        );\n        if (isValid) {\n          const localData = localStorage.getItem(\"inv\");\n          if (!localData) {\n            // no local, only remote\n            localStorage.setItem(\"inv\", JSON.stringify(inv));\n          } else if (JSON.stringify(inv) !== localData) {\n            // remote !== local\n            alert(\"Discrepancy remote vs local, keeping remote for now.\");\n            localStorage.setItem(\"inv\", JSON.stringify(inv));\n          }\n          localStorage.setItem(\"last-fetch\", new Date().valueOf() + \"\");\n          localStorage.setItem('binId', binId);\n          window.location.reload();\n        } else {\n          alert(\n            \"Invalid data, please check your backup id or upload an inv file.\"\n          );\n          (document.getElementById(\n            \"backup-id-input\"\n          ) as HTMLInputElement).value = \"\";\n          localStorage.clear();\n          return;\n        }\n      }\n    };\n\n    req.open(\"GET\", `https://api.jsonbin.io/v3/b/${binId}/latest`, true);\n    req.send();\n  }, []);\n\n  useEffect(() => {\n    const loadedInv = localStorage.getItem(\"inv\");\n    const binId = localStorage.getItem(\"binId\");\n    const lastFetch = Number(localStorage.getItem(\"last-fetch\")) || 0;\n    const isFetchedIn1Min = new Date().valueOf() - lastFetch < 1 * 60 * 1000;\n    const hasLocal = loadedInv !== null;\n    const hasRemote = binId !== null;\n\n    if (hasRemote && isFetchedIn1Min && hasLocal) {\n      setInvData(JSON.parse(loadedInv as string));\n    } else if (hasLocal && !hasRemote) {\n      const loadedData = JSON.parse(loadedInv as string);\n      setInvData(loadedData);\n      remoteSync(loadedData);\n    } else if (hasRemote) {\n      fetchDataFromJsonBin(binId as string);\n    }\n  }, [remoteSync, fetchDataFromJsonBin]);\n\n  useEffect(() => {\n    document.onkeyup = (e: any) => {\n      if (e.key === \"Escape\") {\n        document\n          .getElementById(editingUID + \"\")\n          ?.style.setProperty(\"text-decoration\", \"none\");\n        setEditingUID(0);\n      }\n    };\n  }, [editingUID]);\n\n  useEffect(() => {\n    if (!invData) return;\n    localStorage.setItem(\"inv\", JSON.stringify(invData));\n    const binId = localStorage.getItem('binId');\n    binId && remoteSync(invData);\n  }, [invData, remoteSync]);\n\n  const updateInvData = (newInv: any) => {\n    if (newInv) {\n      setInvData(newInv);\n    }\n  };\n\n  const updateEditingCategory = (cat: string) => {\n    setEditingCategory(cat);\n  };\n  const updateEditingUID = (uid: number) => {\n    setEditingUID(uid);\n  };\n  const updateCreatingNewCat = (isCreating: boolean) => {\n    setCreatingNewCat(isCreating);\n  };\n  const updateRemoveInfo = (info: any) => {\n    setRemoveInfo(info);\n  };\n\n  const handleBackupIdInput = (e: any) => {\n    const id: string = (document.getElementById(\n      \"backup-id-input\"\n    ) as HTMLInputElement)?.value;\n\n    if (!id) {\n      alert(\n        \"Invalid input, please check your backup id or upload an inv file.\"\n      );\n      return;\n    }\n    fetchDataFromJsonBin(id);\n  };\n\n  const confirmRemove = () => {\n    if (!removeInfo?.cat) return;\n    if (!removeInfo.tier && removeInfo.cat) {\n      // removing whole cat\n      const copy = { ...invData };\n      delete copy[removeInfo.cat];\n      setInvData(copy);\n      setRemoveInfo(null);\n      return;\n    }\n    if (!removeInfo.uid) return;\n    setInvData({\n      ...invData,\n      [removeInfo.cat]: [\n        ...invData[removeInfo.cat].filter(\n          (c: ICard) => c.uid !== removeInfo.uid\n        ),\n      ],\n    });\n    setRemoveInfo(null);\n  };\n\n  const abortRemove = () => {\n    setRemoveInfo(null);\n  };\n\n  const handleInvInput = (event: any) => {\n    const file = event?.target?.files?.[0];\n    console.log(file);\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        const removed_locks = (evt?.target?.result as string)?.replace(\n          \":lock:\",\n          \"\"\n        );\n\n        const built_inv: any = {};\n        let last_cat = \"\";\n        const lines = removed_locks.split(\"\\n\");\n        let invalidCounter = 0;\n        const tempLog: string[] = [];\n        lines.forEach(line => {\n          if (line.startsWith(\":\") || /^[0-9]/.test(line)) {\n            // starts with : or number -> is inv item line\n            const parsedCard = parseCard(line.trim());\n\n            if (!last_cat || !parsedCard) {\n              invalidCounter++;\n              tempLog.push(line);\n              return;\n            } else {\n              built_inv[last_cat].push({\n                ...parsedCard,\n              });\n            }\n          } else {\n            // cat or line break\n            if (line.length > 1) {\n              // is sub cat line\n              const current_cat = line.trim();\n              if (current_cat !== last_cat) {\n                // new cat\n                if (!built_inv[current_cat]) built_inv[current_cat] = [];\n              }\n              last_cat = current_cat;\n            }\n          }\n        });\n\n        // now inv should be complete\n        const sortedInv: any = {};\n        const keys = [...Object.keys(built_inv)];\n\n        if (keys.length === 0) {\n          // Empty obj\n          invalidCounter ++;\n          tempLog.push(\"No lines found.\");\n        } else {\n          keys.forEach(k => {\n            if (built_inv[k].length === 0) {\n              delete built_inv[k];\n              tempLog.push(k);\n              return;\n            }\n            sortedInv[k] = built_inv[k].sort(cardSort);\n          });\n  \n          localStorage.setItem(\"inv\", JSON.stringify(sortedInv));\n        }\n\n        if (invalidCounter > 0) {\n          setErrorLog(tempLog);\n          setShowResult(true);\n        } else {\n          window.location.reload();\n        }\n      };\n      reader.onerror = function (evt) {\n        alert(\"error\");\n      };\n    }\n  };\n\n  const closeImportResultModal = () => {\n    window.location.reload();\n  };\n\n  const addSub = () => {\n    const cat = (document.getElementById(\n      \"new-subcat-input\"\n    ) as HTMLInputElement).value;\n    if (!cat) {\n      alert(\"Invalid category name\");\n      return;\n    } else {\n      setInvData({\n        ...invData,\n        [cat]: [],\n      });\n      setCreatingNewCat(false);\n      setEditingCategory(\"\");\n      setEditingUID(0);\n    }\n  };\n  return (\n    <div className='main-container'>\n      {!invData ? (\n        <div className='file-input-container'>\n          <div>\n            <div className='text-align-left'>\n              Hi, please upload inventory text file.\n            </div>\n            <br />\n            <input\n              type='file'\n              name='initial-inv-input'\n              id='initial-inv-input'\n              accept='text/plain'\n              onChange={handleInvInput}\n            />\n          </div>\n          <div>\n            <div className='text-align-left'>Or input the backup id:</div>\n            <div className='backup-id-input-container'>\n              <Form.Control\n                placeholder='607b400f0ed6f819beae5284'\n                id='backup-id-input'\n                onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) =>\n                  fireSubmitOnEnter(e, \"backup-id-input-button\")\n                }\n              />\n              &nbsp;\n              <Button id='backup-id-input-button' onClick={handleBackupIdInput}>\n                Enter\n              </Button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        Object.keys(invData)\n          .sort()\n          .map(cat => {\n            return (\n              <SubCategoryCard\n                key={cat}\n                category={cat}\n                invData={invData}\n                editingCategory={editingCategory}\n                editingUID={editingUID}\n                updateInvData={updateInvData}\n                updateRemoveInfo={updateRemoveInfo}\n                updateEditingUID={updateEditingUID}\n                updateCreatingNewCat={updateCreatingNewCat}\n                updateEditingCategory={updateEditingCategory}\n              />\n            );\n          })\n      )}\n      <a\n        id='downloadJSON'\n        href={\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(invData))\n        }\n        download='inv.json'\n        style={{ display: \"none\" }}\n      >\n        DOWNLOAD JSON\n      </a>\n      {removeInfo && (\n        <Modal show backdrop='static' keyboard={false}>\n          <Modal.Header>Are you sure?</Modal.Header>\n          <Modal.Body>\n            <Alert variant='danger'>\n              Are you sure you want to remove this?\n              <br />\n              <b>\n                {removeInfo.tier\n                  ? `${removeInfo.tier}s - ${removeInfo.name} - ${removeInfo.uid}`\n                  : `Category: ${removeInfo.cat}`}\n              </b>\n            </Alert>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={abortRemove}>\n              Don't remove\n            </Button>\n            <Button variant='danger' onClick={confirmRemove}>\n              Yes, do it.\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n      {showResult && errorLog.length > 0 && (\n        <Modal show backdrop='static' keyboard={false}>\n          <Modal.Header>Error encountered</Modal.Header>\n          <Modal.Body>\n            <Alert variant='danger'>\n              {errorLog.length} error(s) encountered in these lines:\n            </Alert>\n            <div className='import-error-log-container'>\n              {errorLog.map((l, i) => (\n                <div>\n                  <span className='error-log-index unselectable'>\n                    {i + 1}&nbsp;\n                  </span>\n                  {l}\n                </div>\n              ))}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={closeImportResultModal}>\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n      {isCreatingNewCat && (\n        <Modal show>\n          <Modal.Header closeButton>New sub category</Modal.Header>\n          <Modal.Body>\n            <Form.Control\n              id='new-subcat-input'\n              placeholder='Marvel Cinematic Universe'\n              autoFocus\n              onKeyUp={(e: React.KeyboardEvent<HTMLInputElement>) =>\n                fireSubmitOnEnter(e, \"new-subcat-input-button\")\n              }\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='primary'\n              id='new-subcat-input-button'\n              onClick={addSub}\n            >\n              ADD\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}